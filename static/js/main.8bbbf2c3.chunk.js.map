{"version":3,"sources":["SceneComponent.jsx","ExprField.tsx","OptionPanel.jsx","tensor-0.1.3.js","leibniz-ast-0.1.1.js","DefsPanel.jsx","BodyRow.jsx","BodiesPane.jsx","Editor.jsx","hsb-color-1.1.0.js","leibniz-0.1.3.js","Test.jsx","ImportFile.jsx","DumpPanel.jsx","LbNavBar.tsx","LbAlert.tsx","App.jsx","reportWebVitals.js","index.js"],"names":["BabylonScene","onResizeWindow","engine","resize","this","BABYLON","canvas","deterministicLockstep","lockstepMaxSteps","scene","props","onSceneMount","console","error","window","addEventListener","removeEventListener","c","className","canvasClass","ref","onCanvasLoaded","React","Component","ExprField","name","expr","errors","withoutDelete","onDelete","onChange","hasErrors","length","errorItems","map","text","idx","deleteBtn","InputGroup","Append","Button","variant","onClick","icon","faTrash","Form","Group","size","Prepend","Control","type","value","ev","target","isInvalid","Feedback","OptionPanel","onCancel","onConfirm","show","title","message","Modal","onHide","onHideModal","Header","closeButton","Title","Body","Footer","onConfirmModal","confirmButton","assert","condition","Error","Quaternion","values","_values","i","j","k","w","_","a","other","zip","ary","sum","scale","x","ai","aj","ak","bi","bj","bk","b","l","aw","bw","Math","sqrt","mod","Number","MIN_VALUE","Matrix","row","reduce","f","n","min","rows","cols","trace","zipMap","add","subtract","m","partRows","take","col","push","appendRows","range","concat","v","Array","acc","y","z","len","hphi","cos","sa","sin","r","phi","theta","rr","sint","cost","sinp","cosp","sincos","sinsin","enchelon","gaussJordan","drop","det","mtx","h","imax","max","abs","mx","tr","createField","apply","code","OpTreeBuilder","createDet","context","createMatrixInverse","inverse","createQuatInverse","createValueInverse","createSphere1","sphere1","createCyl1","cyl1","createSphere","sphere","createCyl","cyl","createValueNorma","createQuatNorma","norma","createVectNorma","transpose","multiply","divide","createTrace","createSinh","sinh","createCosh","cosh","createTanh","tanh","createLog","log","createAtan","atan","createAcos","acos","createAsin","asin","createTan","tan","createQuaternion","createVector","createMatrix","createRef","id","resolve","createQrot","qrot","createNegateField","createNegateQuat","negate","createNegateVector","createNegateMatrix","createProduct","op1","op2","createScaleVector","vec","createScaleMatrix","mat","createScalarProduct","createMatrixVectorProduct","createMatrixProduct","createResizeVector","op","createResizeMatrix","createVectorModule","createDivideField","createDivideVector","createDivideMatrix","createSumField","createSumVector","createSumMatrix","createSubField","createSubVector","createSubMatrix","createPower","pow","createCatField","createInsertFieldAt","insertAt","createCatVector","append","createInsertVector","createAppendVector","createAppendMatrix","createTransposeMatrix","createSin","createCos","createExp","exp","createQuatModule","module","createSumQuatField","addValue","createSumQuat","createSubFieldQuat","subtractFromValue","createSubQuatField","subtractValue","createSubQuat","createField2Quat","createScaleQuat","quat","createProductQuat","createDivQuatField","createDivQuat","createSqrt","createMinVec","createMinMat","createMaxVec","createMaxMat","createAbs","NumberToken","IdToken","SymbolToken","Lexer","require","IdentifierRegex","SingleIdentifierRegex","NumberRegex","ExpNumberRegex","ReservedKeywordsRegex","checkForIdentifier","match","Builder","conf","_conf","_defs","vars","funcs","each","data","buildRef","defs","result","update","buildExp","node","bodies","position","rotation","def","varDef","funcDef","CircularResferenceResult","CodeResult","FieldType","build","System","_vars","_funcs","_update","_bodies","dt","withDt","nextState","mapValues","cloneDeep","funcCode","func","assign","dump","SystemParser","config","_config","_parserAst","ParserAst","conf1","parseAll","conf1_1","checkForNameDefinitions","conf2","checkForFunctionsRedefinition","conf3","checkForUpdateDefinition","conf4","conf5","checkForUpdateTypeDefinition","checkForBodiesTypeDefinition","parserState","createErrors","system","errorCount","buildSystem","undefined","err","parse","positionNode","positionErrors","_result","VectorType","QuaternionType","body","funcsCode","varsCode","resolver","updateCode","bodiesCode","posCode","isVar","isFunction","typeName","varResult","upResult","MatrixType","_type","_rows","_cols","_code","_errors","withErrors","flatten","arguments","ASTNode","ConstantNode","_value","ConstantQuatNode","BaseNode","_size","builder","IdentityNode","RefNode","_id","withCode","DtRefNode","UnaryNode","arg","_arg","dependencies","NegNode","ModNode","withType","withMoreErrors","TransposeNode","withSize","SqrtNode","ExpNode","SinNode","CosNode","TanNode","AsinNode","AcosNode","AtanNode","SinhNode","CoshNode","TanhNode","LogNode","QrotNode","c1","BinaryNode","arg1","arg2","_arg1","_arg2","PwrNode","CatNode","withRows","c2","AddNode","SubNode","MulNode","withTypeOf","DivNode","TraceNode","NormaNode","CylNode","SphereNode","Cyl1Node","Sphere1Node","InverseNode","DetNode","MinNode","MaxNode","DefaultNode","UnaryFunctions","T","inv","lexer","addRule","_token","_lexer","msg","discard","setSource","parseExp","token","addError","parseSum","parseFactor","parseUnary","nodeGen","parsePwr","baseNode","parseTerm","expNode","expected","PI","E","baseExp","parseInt","identExp","handleId","lex","ns","uuidv5","URL","DefsPanel","state","deleteModalShown","newName","newNameError","panelKey","newConf","createDefs","showOptionPanel","deleteDefs","action","setState","modalTitle","modalMessage","optionAction","hideOptionPanel","flatMap","fieldList","toPairs","sortBy","key","hasNewNameError","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Collapse","onName","variation","onAdd","disabled","faPlus","BodyRow","modalShown","rotField","onChangeRotation","deleteRotation","onAddRotation","onChangePosition","onDeleteRow","BodiesPanel","confirmAction","createBodies","deleteBody","splice","e","Table","striped","scope","Editor","createConf","hasError","noValidate","validated","onBodiesChange","panelId","fromHeat","s","hc","Red","White","fromHSB","Leibniz","options","_options","defaults","cameraType","cameraPosition","cameraMinZ","ambientColor","sunLightDirection","sunLightIntensity","subSteps","_subSteps","camera","setTarget","Zero","angularSensibility","moveSensibility","setPosition","minZ","createCamera","attachControl","intensity","_state","next","onBeforeStepObservable","getAnimationRatio","refreshTime","runRenderLoop","refreshScene","render","_shapes","updateShape","shape","pos","rot","FromArray","rotationQuaternion","removeMesh","shapes","color","hsb","CreatePolyhedron","sizeX","sizeY","sizeZ","material","diffuseColor","createOcta","CreateIcoSphere","flat","radius","subdivisions","updatable","Test","createNewState","JSON","stringify","initialConf","cfg","toString","controlId","Label","componentClass","placeholder","onInput","Static","ImportFile","file","onFileRead","fr","FileReader","onload","onerror","event","onError","readAsText","bsSize","FormControl","label","help","onFileChange","files","bsStyle","DumpPanel","counts","sys","parseFloat","dumpTable","dumpWithDt","keys","header","blob","Blob","saveAs","dumpDisabled","Container","Row","inline","setCounts","setDt","dumpData","LbNavBar","onReset","onLoad","onImport","onExport","Navbar","bg","expand","Brand","href","aria-controls","Nav","NavDropdown","Item","onSelect","Link","LbAlert","isVisible","onClose","Alert","dismissible","Heading","App","cfgCookie","Cookies","alertShow","importModalShown","leibniz","processConf","init","reset","load","optionShow","optionTitle","optionMessage","optionConfirmBtn","optionConfirm","alertTitle","alertMessage","url","process","ajax","getJSON","pipe","tap","json","onLoaded","onLoadError","subscribe","_subj","xhr","status","statusText","showAlert","Tab","content","hideAlert","hideImportPanel","exportFile","fluid","showImportPanel","showExportPanel","Tabs","FormGroup","setSubSteps","importFile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bbbf2c3.chunk.js","sourcesContent":["import React from 'react';\nimport * as BABYLON from 'babylonjs';\n\nexport class BabylonScene extends React.Component {\n\n  componentDidMount() {\n    this.engine = new BABYLON.Engine(this.canvas, true,\n      {\n        deterministicLockstep: true,\n        lockstepMaxSteps: 4\n      });\n\n    const scene = new BABYLON.Scene(this.engine);\n    this.scene = scene;\n\n    if (typeof this.props.onSceneMount === 'function') {\n      this.props.onSceneMount({\n        scene: scene,\n        engine: this.engine,\n        canvas: this.canvas\n      });\n    } else {\n      console.error('onSceneMount function not available');\n    }\n\n    // Resize the babylon engine when the window is resized\n    window.addEventListener('resize', this.onResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeWindow);\n  }\n\n  onResizeWindow = () => {\n    if (this.engine) {\n      this.engine.resize();\n    }\n  }\n\n  onCanvasLoaded(c) {\n    if (c !== null) {\n      this.canvas = c;\n    }\n  }\n\n  render() {\n    return (\n      <canvas className={this.props.canvasClass} ref={(c) => this.onCanvasLoaded(c)} />\n    );\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport { InputGroup, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport const ExprField: FunctionComponent<{\n  name: string;\n  expr: string;\n  errors?: any[];\n  withoutDelete: boolean;\n  onChange?: (arg: string) => void;\n  onDelete?: () => void;\n}> = ({ name, expr, errors = [], withoutDelete, onDelete, onChange }) => {\n  const hasErrors = errors.length > 0;\n  const errorItems = errors.map((text, idx) => (<li key={idx}>{text}</li>));\n\n  const deleteBtn = !withoutDelete ?\n    (<InputGroup.Append>\n      <Button variant=\"danger\"\n        onClick={() => { if (onDelete) { onDelete() } }}>\n        <FontAwesomeIcon icon={faTrash} />\n      </Button>\n    </InputGroup.Append>)\n    : '';\n\n  return (\n    <Form.Group >\n      <InputGroup size=\"sm\" >\n        <InputGroup.Prepend>{name}</InputGroup.Prepend>\n        <Form.Control type=\"text\"\n          value={expr}\n          // onInput={(ev) => { if (onChange) { onChange(ev.target.value); } }}\n          onChange={(ev) => { if (onChange) { onChange(ev.target.value); } }}\n          isInvalid={!!hasErrors} />\n        {deleteBtn}\n        <Form.Control.Feedback type=\"invalid\">\n          <ul>{errorItems}</ul>\n        </Form.Control.Feedback>\n      </InputGroup>\n    </Form.Group >\n  );\n}\n","import React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n/**\n * \n */\nexport class OptionPanel extends Component {\n\n  onHideModal() {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  onConfirmModal() {\n    if (this.props.onConfirm) {\n      this.props.onConfirm();\n    }\n  }\n\n  render() {\n    const { show, title, message } = this.props;\n    return (\n      <Modal show={show}\n        size=\"sm\"\n        onHide={() => this.onHideModal()}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{message}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => this.onHideModal()}>Cancel</Button>\n          <Button variant=\"danger\" onClick={() => this.onConfirmModal()}>{this.props.confirmButton}</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import { default as _ } from 'lodash';\n\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assert failed');\n    }\n}\n\nexport class Quaternion {\n    constructor(values) {\n        assert(values.length === 4,\n            'Assert failed: (values.length === 4), values.length=' + values.length)\n        this._values = values;\n    }\n\n    get values() { return this._values; }\n    get i() { return this._values[0]; }\n    get j() { return this._values[1]; }\n    get k() { return this._values[2]; }\n    get w() { return this._values[3]; }\n\n    toString() {\n        return '(' + this.i + '*i+' + this.j + '*j+' + this.k + '*k+' + this.w + ')';\n    }\n\n    /* Returns the negate quaternion */\n    negate() {\n        return new Quaternion(_.map(this.values, a => -a));\n    }\n\n    /* Returns the quaternion by adding another quaternion */\n    add(other) {\n        const values = _(this.values).zip(other.values).map(ary => _.sum(ary)).value();\n        return new Quaternion(values);\n    }\n\n    /* Returns the quaternion by adding a real value */\n    addValue(other) {\n        return new Quaternion([this.i, this.j, this.k, this.w + other]);\n    }\n\n    /* Returns the quaternion by subtracting a real value */\n    subtractValue(other) {\n        return new Quaternion([this.i, this.j, this.k, this.w - other]);\n    }\n\n    /* Returns the quaternion by subtracting a real value from this */\n    subtractFromValue(other) {\n        return new Quaternion([-this.i, -this.j, -this.k, other - this.w]);\n    }\n\n    /* Returns the quaternion by subtracting another quaternion */\n    subtract(other) {\n        const values = _(this.values).zip(other.values).map(ary => ary[0] - ary[1]).value();\n        return new Quaternion(values);\n    }\n\n    /* Returns the quaternion by multipling a real */\n    scale(scale) {\n        const values = _.map(this.values, x => x * scale);\n        return new Quaternion(values);\n    }\n\n    /* Returns the quaternion by multipling another quaternion */\n    multiply(other) {\n        const ai = this.i;\n        const aj = this.j;\n        const ak = this.k;\n        const a = this.w;\n        const bi = other.i;\n        const bj = other.j;\n        const bk = other.k;\n        const b = other.w;\n\n        // ii = jj = kk = -1\n        // ij = k\n        // jk = i\n        // ki = j\n        const ci = a * bi + ai * b + aj * bk - ak * bj;\n        const cj = a * bj + aj * b + ak * bi - ai * bk;\n        const ck = a * bk + ak * b + ai * bj - aj * bi;\n        const c = a * b - ai * bi - aj * bj - ak * bk;\n        return new Quaternion([ci, cj, ck, c]);\n    }\n\n    inverse() {\n        const i = this.i;\n        const j = this.j;\n        const k = this.k;\n        const w = this.w;\n        const l = i * i + j * j + k * k + w * w;\n\n        return new Quaternion([-i / l, -j / l, -k / l, w / l]);\n    }\n\n    divide(other) {\n        const ai = this.i;\n        const aj = this.j;\n        const ak = this.k;\n        const aw = this.w;\n\n        const bi = other.i;\n        const bj = other.j;\n        const bk = other.k;\n        const bw = other.w;\n        const l = bi * bi + bj * bj + bk * bk + bw * bw;\n\n        const ci = (-aw * bi + ai * bw - aj * bk + ak * bj) / l;\n        const cj = (-aw * bj + aj * bw - ak * bi + ai * bk) / l;\n        const ck = (-aw * bk + ak * bw - ai * bj + aj * bi) / l;\n        const cw = (aw * bw + ai * bi + aj * bj + ak * bk) / l;\n\n        return new Quaternion([ci, cj, ck, cw]);\n    }\n\n    module() {\n        const ai = this.i;\n        const aj = this.j;\n        const ak = this.k;\n        const aw = this.w;\n        return Math.sqrt(ai * ai + aj * aj + ak * ak + aw * aw);\n    }\n\n    norma() {\n        const ai = this.i;\n        const aj = this.j;\n        const ak = this.k;\n        const aw = this.w;\n        const mod = Math.sqrt(ai * ai + aj * aj + ak * ak + aw * aw);\n\n        if (mod > Number.MIN_VALUE) {\n            return new Quaternion([ai / mod, aj / mod, ak / mod, aw / mod]);\n        } else {\n            return new Quaternion([0, 0, 0, 1]);\n        }\n    }\n}\n\nexport class Matrix {\n    constructor(values) {\n        this._values = values;\n    }\n    get values() { return this._values; }\n    get rows() { return this.values.length; }\n    get cols() { return this.values.length > 0 ? this.values[0].length : 0; }\n\n    toString() {\n        const rows = _(this.values).map((row) =>\n            '[' + _.reduce(row, (a, b) => a + ',' + b) + ']'\n        ).reduce((a, b) => a + ',' + b);\n        return '[' + rows + ']';\n    }\n\n    map(f) {\n        const v = _.map(this.values, (row, i) =>\n            _.map(row, (value, j) =>\n                f(value, i, j))\n        );\n        return new Matrix(v);\n    }\n\n    trace() {\n        const n = Math.min(this.rows, this.cols);\n        var trace = 0;\n        for (var i = 0; i < n; i++) {\n            trace += this.values[i][i];\n        }\n        return trace;\n    }\n\n    /* Returns the negate matrix */\n    negate() {\n        return this.map(a => -a);\n    }\n\n    zipMap(other, f) {\n        assert(this.rows === other.rows && this.cols === other.cols,\n            'Assert failed: (this.rows === other.rows && this.cols === other.cols), this.rows=' + this.rows\n            + ',other.rows=' + other.rows\n            + ',this.cols=' + this.cols\n            + ',other.cols=' + other.cols);\n\n        const v = _.map(this.values, (row, i) =>\n            _.map(row, (value, j) =>\n                f(value, other.values[i][j], i, j))\n        );\n        return new Matrix(v);\n    }\n\n    /* Returns the matrix by adding the paramter */\n    add(other) {\n        return this.zipMap(other, _.add);\n    }\n\n    /* Returns the matrix by subtracting the paramter */\n    subtract(other) {\n        return this.zipMap(other, _.subtract);\n    }\n\n    /* Returns a scaled matrix */\n    scale(scale) {\n        return this.map(a => {\n            return a * scale\n        });\n    }\n\n    /* Returns a scaled matrix */\n    divide(scale) {\n        return this.map(a => a / scale);\n    }\n\n    /* Returns a resized Matrix the filler element is 0 */\n    resize(rows, cols) {\n        const n = this.rows;\n        const m = this.cols;\n        const partRows = _(this.values)\n            .take(Math.min(n, rows))\n            .map(row => {\n                const col = _.take(row, Math.min(m, cols));\n                for (var i = 0; i < cols - m; i++) {\n                    col.push(0);\n                }\n                return col;\n            }).value();\n        const appendRows = rows > n ?\n            _.map(_.range(rows - n), () =>\n                _.map(_.range(cols), () => 0))\n            : [];\n        const res = _.concat(partRows, appendRows);\n        return new Matrix(res);\n    }\n\n    transpose() {\n        const n = this.rows;\n        const m = this.cols;\n        const v = new Array(m);\n        for (var i = 0; i < m; i++) {\n            v[i] = Array(n);\n            for (var j = 0; j < n; j++) {\n                v[i][j] = this.values[j][i];\n            }\n        }\n        return new Matrix(v);\n    }\n\n    multiply(other) {\n        assert(this.cols === other.rows,\n            'Assert failed: (this.cols === other.rows), this.cols=' + this.cols\n            + ',other.rows=' + other.rows);\n\n        const n = this.rows;\n        const m = other.cols;\n        const l = this.cols;\n        const v = new Array(n);\n        for (var i = 0; i < n; i++) {\n            v[i] = Array(m);\n            for (var j = 0; j < m; j++) {\n                var acc = 0;\n                for (var k = 0; k < l; k++) {\n                    acc += this.values[i][k] * other.values[k][j];\n                }\n                v[i][j] = acc;\n            }\n        }\n        return new Matrix(v);\n    }\n\n    append(other) {\n        assert(this.rows === other.rows,\n            'Assert failed: (this.rows === other.rows), this.rows=' + this.rows\n            + ',other.rows=' + other.rows);\n\n        const n = this.rows;\n        const m = this.cols;\n        const l = other.cols;\n        const v = new Array(n);\n        for (var i = 0; i < n; i++) {\n            v[i] = Array(m + l);\n            for (var j = 0; j < m + l; j++) {\n                v[i][j] = j < m ? this.values[i][j] : other.values[i][j - m];\n            }\n        }\n        return new Matrix(v);\n    }\n\n    insertAt(idx, value) {\n        assert(this.cols === 1,\n            'Assert failed: (this.cols === 1), this.cols=' + this.cols);\n        assert(idx >= 0 && idx <= this.rows,\n            'Assert failed: (idx >= 0 && idx <= this.rows), idx=' + idx + ', this.cols=' + this.cols);\n\n        const n = this.rows;\n        const v = new Array(n + 1);\n        for (var i = 0; i <= n; ++i) {\n            v[i] = i < idx\n                ? this.values[i]\n                : i === idx\n                    ? [value] : this.values[i - 1];\n        }\n        return new Matrix(v);\n    }\n\n    qrot() {\n        assert(this.rows === 3 && this.cols === 1,\n            'Assert failed: (this.rows === 3 && this.cols === 1), this.rows=' + this.rows\n            + ', this.cols=' + this.cols);\n        const x = this.values[0][0];\n        const y = this.values[1][0];\n        const z = this.values[2][0];\n        const len = Math.sqrt(x * x + y * y + z * z);\n        if (len > Number.MIN_VALUE) {\n            const hphi = len / 2.;\n            const w = Math.cos(hphi);\n            const sa = Math.sin(hphi);\n            const i = sa * x / len;\n            const j = sa * y / len;\n            const k = sa * z / len;\n            return new Quaternion([i, j, k, w]);\n        } else {\n            return new Quaternion([0, 0, 0, 1]);\n        }\n    }\n\n    cyl() {\n        assert(this.rows === 3 && this.cols === 1,\n            'Assert failed: (this.rows === 3 && this.cols === 1), this.rows=' + this.rows\n            + ', this.cols=' + this.cols);\n        const r = this.values[0][0];\n        const phi = this.values[1][0];\n        const z = this.values[2][0];\n        return new Matrix([\n            [r * Math.sin(phi)],\n            [r * Math.cos(phi)],\n            [z]\n        ]);\n    }\n\n    sphere() {\n        assert(this.rows === 3 && this.cols === 1,\n            'Assert failed: ((this.rows === 3 && this.cols === 1), this.rows=' + this.rows\n            + ',this.cols=' + this.cols);\n        const r = this.values[0][0];\n        const theta = this.values[1][0];\n        const phi = this.values[2][0];\n        const rr = r * Math.sin(theta);\n        return new Matrix([\n            [rr * Math.cos(phi)],\n            [rr * Math.sin(phi)],\n            [r * Math.cos(theta)]\n        ]);\n    }\n\n    cyl1() {\n        assert(this.rows === 3 && this.cols === 1,\n            'Assert failed: (this.rows === 3 && this.cols === 1), this.rows=' + this.rows\n            + ', this.cols=' + this.cols);\n        const r = this.values[0][0];\n        const phi = this.values[1][0];\n        // const z = this.values[2][0];\n        const sin = Math.sin(phi);\n        const cos = Math.cos(phi);\n        return new Matrix([\n            [cos, -r * sin, 0],\n            [sin, r * cos, 0],\n            [0, 0, 1]\n        ]);\n    }\n\n    sphere1() {\n        assert(this.rows === 3 && this.cols === 1,\n            'Assert failed: (this.rows === 3 && this.cols === 1), this.rows=' + this.rows\n            + ', this.cols=' + this.cols);\n\n        const r = this.values[0][0];\n        const theta = this.values[1][0];\n        const phi = this.values[2][0];\n        const sint = Math.sin(theta);\n        const cost = Math.cos(theta);\n        const sinp = Math.sin(phi);\n        const cosp = Math.cos(phi);\n        const sincos = sint * cosp;\n        const sinsin = sint * sinp;\n        const coscos = cost * cosp;\n        return new Matrix([\n            [sincos, r * coscos, -r * sinsin],\n            [sinsin, r * cost * cosp, r * sincos],\n            [cost, -r * sint, 0]\n        ]);\n    }\n\n    inverse() {\n        const { enchelon } = this.gaussJordan();\n        const n = this.rows;\n        const inv = _.map(enchelon, row => _.drop(row, n));\n        return new Matrix(inv);\n    }\n\n    det() {\n        const { det } = this.gaussJordan();\n        return det;\n    }\n\n    gaussJordan() {\n        assert(this.rows === this.cols,\n            'Assert failed: (this.rows === this.cols), this.rows=' + this.rows\n            + ', this.cols=' + this.cols);\n        const n = this.rows;\n        const mtx = Array(n);\n        for (var i = 0; i < n; i++) {\n            mtx[i] = Array(2 * n);\n        }\n        for (i = 0; i < n; i++) {\n            for (var j = 0; j < n; j++) {\n                mtx[i][j] = this.values[i][j];\n                mtx[i][j + n] = i === j ? 1 : 0;\n            }\n        }\n        var det = 1;\n        var h = 0; // pivot row\n        var k = 0; // pivot col\n        while (h < n && k < n) {\n            // Find pivot row\n            var imax = h;\n            var max = Math.abs(mtx[h][k]);\n            for (i = h + 1; i < n; i++) {\n                const mx = Math.abs(mtx[i][k]);\n                if (mx > max) {\n                    imax = i;\n                    max = mx;\n                }\n            }\n            if (max === 0) {\n                /* No pivot in this column, pass to next column */\n                k++;\n            } else {\n                //Swap row imax, h\n                const tr = mtx[imax];\n                mtx[imax] = mtx[h];\n                mtx[h] = tr;\n                det = -det;\n\n                for (i = h + 1; i < n; i++) {\n                    const f = mtx[i][k] / mtx[h][k];\n                    mtx[i][k] = 0;\n                    /* Do for all remaining elements in current row: */\n                    for (j = k + 1; j < 2 * n; j++) {\n                        mtx[i][j] -= mtx[h][j] * f;\n                    }\n                }\n                h++;\n                k++;\n            }\n        }\n        // Inverse matrix does not exist\n        assert(h === k, 'Inverse matrix does not exist');\n        // Reverse\n        for (h = n - 1; h >= 0; h--) {\n            for (i = 0; i < h; i++) {\n                // mtx[i][j] = mtx[i][j] + mtx[h][j] * f;\n                // mtx[i][h] + mtx[h][h] * f = 0\n                //f = -mtx[i][h]/mtx[h][h];\n                const f = mtx[i][h] / mtx[h][h];\n                mtx[i][h] = 0;\n                for (j = h + 1; j < 2 * n; j++) {\n                    // mtx[i][h] = 0 = mtx[i][h] - mtx[h][j] * f;\n                    mtx[i][j] -= mtx[h][j] * f;\n                }\n            }\n            for (j = h + 1; j < 2 * n; j++) {\n                mtx[h][j] /= mtx[h][h];\n            }\n            det *= mtx[h][h];\n            mtx[h][h] = 1;\n        }\n        return {\n            enchelon: mtx,\n            det: det\n        };\n    }\n\n    min() {\n        return _(this.values).map(row => _(row).min()).min();\n    }\n\n    max() {\n        return _(this.values).map(row => _(row).max()).max();\n    }\n}\n\nfunction createField(value) {\n    return {\n        apply: () => value,\n        code: [\"value \" + value]\n    };\n}\n\nfunction createQuaternion(value) {\n    return {\n        apply: () => new Quaternion(value),\n        code: [\"quat \" + value]\n    };\n}\n\nfunction createVector(values) {\n    const v = _.map(values, x => [x]);\n    return {\n        apply: () => new Matrix(v),\n        code: ['vector ' + values]\n    };\n}\nfunction createMatrix(values) {\n    return {\n        apply: () => new Matrix(values),\n        code: ['matrix ' + values]\n    };\n}\nfunction createRef(id) {\n    return {\n        apply: (context) => context.resolve(id),\n        code: ['ref ' + id]\n    };\n}\nfunction createQrot(code) {\n    return {\n        apply: (context) => code.apply(context).qrot(),\n        code: _.concat(code.code, ['qrot'])\n    };\n}\nfunction createField2Quat(code) {\n    return {\n        apply: (context) => new Quaternion([0, 0, 0, code.apply(context)]),\n        code: _.concat(code.code, ['value to quat'])\n    };\n}\nfunction createNegateField(code) {\n    return {\n        apply: (context) => -code.apply(context),\n        code: _.concat(code.code, ['negate value'])\n    };\n}\nfunction createNegateQuat(code) {\n    return {\n        apply: (context) => code.apply(context).negate(),\n        code: _.concat(code.code, ['negate quaternion'])\n    };\n}\nfunction createNegateVector(code) {\n    return {\n        apply: (context) => code.apply(context).negate(),\n        code: _.concat(code.code, ['negate vector'])\n    };\n}\nfunction createNegateMatrix(code) {\n    return {\n        apply: (context) => code.apply(context).negate(),\n        code: _.concat(code.code, ['negate matrix'])\n    };\n}\nfunction createProduct(op1, op2) {\n    return {\n        apply: (context) => op1.apply(context) * op2.apply(context),\n        code: _.concat(op1.code, op2.code, ['multiply value'])\n    };\n}\nfunction createProductQuat(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).multiply(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['multiply quat'])\n    };\n}\nfunction createQuatModule(code) {\n    return {\n        apply: (context) => code.apply(context).module(),\n        code: _.concat(code.code, ['quat module'])\n    };\n}\nfunction createScaleQuat(quat, scale) {\n    return {\n        apply: (context) =>\n            quat.apply(context).scale(scale.apply(context)),\n        code: _.concat(quat.code, scale.code, ['scale quat'])\n    };\n}\nfunction createScaleVector(vec, scale) {\n    return {\n        apply: (context) =>\n            vec.apply(context).scale(scale.apply(context)),\n        code: _.concat(vec.code, scale.code, ['scale vector'])\n    };\n}\nfunction createScaleMatrix(mat, scale) {\n    return {\n        apply: (context) =>\n            mat.apply(context).scale(scale.apply(context)),\n        code: _.concat(mat.code, scale.code, ['scale matrix'])\n    };\n}\nfunction createScalarProduct(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).transpose().multiply(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['multiply vector'])\n    };\n}\nfunction createMatrixVectorProduct(mat, vec) {\n    return {\n        apply: (context) =>\n            mat.apply(context).multiply(vec.apply(context)),\n        code: _.concat(mat.code, vec.code, ['multiply matrix by vector'])\n    };\n}\nfunction createMatrixProduct(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).multiply(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['multiply matrix'])\n    };\n}\nfunction createResizeVector(op, rows) {\n    return {\n        apply: (context) =>\n            op.apply(context).resize(rows, 1),\n        code: _.concat(op.code, ['resize vector to ' + rows])\n    };\n}\nfunction createResizeMatrix(op, rows, cols) {\n    return {\n        apply: (context) =>\n            op.apply(context).resize(rows, cols),\n        code: _.concat(op.code, ['resize matrix to ' + rows + ',' + cols])\n    };\n}\nfunction createVectorModule(op) {\n    return {\n        apply: (context) => {\n            const v = op.apply(context);\n            return Math.sqrt(v.transpose().multiply(v).values[0][0]);\n        },\n        code: _.concat(op.code, ['vect module'])\n    };\n}\nfunction createDivideField(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context) / op2.apply(context),\n        code: _.concat(op1.code, op2.code, ['divide value'])\n    };\n}\nfunction createDivideVector(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).divide(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['divide vector'])\n    };\n}\nfunction createDivideMatrix(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).divide(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['divide matrix'])\n    };\n}\nfunction createSumField(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context) + op2.apply(context),\n        code: _.concat(op1.code, op2.code, ['add value'])\n    };\n}\nfunction createSumQuatField(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).addValue(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['add quat value'])\n    };\n}\nfunction createSumQuat(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).add(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['add quat'])\n    };\n}\nfunction createSubFieldQuat(op1, op2) {\n    return {\n        apply: (context) =>\n            op2.apply(context).subtractFromValue(op1.apply(context)),\n        code: _.concat(op1.code, op2.code, ['sub value quat'])\n    };\n}\nfunction createSubQuatField(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).subtractValue(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['sub quat value'])\n    };\n}\nfunction createSubQuat(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).subtract(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['sub quat'])\n    };\n}\n\nfunction createSumVector(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).add(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['add vector'])\n    };\n}\nfunction createSumMatrix(op1, op2) {\n    return {\n        apply: (context) =>\n            op1.apply(context).add(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['add matrix'])\n    };\n}\nfunction createSubField(op1, op2) {\n    return {\n        apply: (context) => op1.apply(context) - op2.apply(context),\n        code: _.concat(op1.code, op2.code, ['subtrac value'])\n    };\n}\nfunction createSubVector(op1, op2) {\n    return {\n        apply: (context) => op1.apply(context).subtract(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['subtract vector'])\n    };\n}\nfunction createSubMatrix(op1, op2) {\n    return {\n        apply: (context) => op1.apply(context).subtract(op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['subtract matrix'])\n    };\n}\nfunction createPower(op1, op2) {\n    return {\n        apply: (context) => Math.pow(op1.apply(context), op2.apply(context)),\n        code: _.concat(op1.code, op2.code, ['power'])\n    };\n}\nfunction createCatField(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return new Matrix([[a], [b]]);\n        },\n        code: _.concat(op1.code, op2.code, ['concat values'])\n    };\n}\nfunction createInsertFieldAt(vec, op2, idx) {\n    return {\n        apply: (context) => {\n            const a = vec.apply(context);\n            const b = op2.apply(context);\n            return a.insertAt(idx, b);\n        },\n        code: _.concat(vec.code, op2.code, ['insert value at ' + idx])\n    };\n}\nfunction createCatVector(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return a.append(b);\n        },\n        code: _.concat(op1.code, op2.code, ['concat vectors'])\n    };\n}\nfunction createInsertVector(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return b.append(a);\n        },\n        code: _.concat(op1.code, op2.code, ['insert vector'])\n    };\n}\nfunction createAppendVector(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return a.append(b);\n        },\n        code: _.concat(op1.code, op2.code, ['append vector'])\n    };\n}\nfunction createAppendMatrix(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return a.append(b);\n        },\n        code: _.concat(op1.code, op2.code, ['concat matrix'])\n    };\n}\nfunction createTransposeMatrix(op1) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            return a.transpose();\n        },\n        code: _.concat(op1.code, ['transpose'])\n    };\n}\nfunction createSin(code) {\n    return {\n        apply: (context) => Math.sin(code.apply(context)),\n        code: _.concat(code.code, ['sin'])\n    };\n}\nfunction createCos(code) {\n    return {\n        apply: (context) => Math.cos(code.apply(context)),\n        code: _.concat(code.code, ['cos'])\n    };\n}\nfunction createExp(code) {\n    return {\n        apply: (context) => Math.exp(code.apply(context)),\n        code: _.concat(code.code, ['exp'])\n    };\n}\nfunction createSqrt(code) {\n    return {\n        apply: (context) => Math.sqrt(code.apply(context)),\n        code: _.concat(code.code, ['sqrt'])\n    };\n}\nfunction createDivQuatField(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return a.scale(1 / b);\n        },\n        code: _.concat(op1.code, op2.code, ['div quat value'])\n    };\n}\nfunction createDivQuat(op1, op2) {\n    return {\n        apply: (context) => {\n            const a = op1.apply(context);\n            const b = op2.apply(context);\n            return a.divide(b)\n        },\n        code: _.concat(op1.code, op2.code, ['div quat'])\n    };\n}\nfunction createTan(code) {\n    return {\n        apply: (context) => Math.tan(code.apply(context)),\n        code: _.concat(code.code, ['tan'])\n    };\n}\nfunction createAsin(code) {\n    return {\n        apply: (context) => Math.asin(code.apply(context)),\n        code: _.concat(code.code, ['asin'])\n    };\n}\nfunction createAcos(code) {\n    return {\n        apply: (context) => Math.acos(code.apply(context)),\n        code: _.concat(code.code, ['acos'])\n    };\n}\nfunction createAtan(code) {\n    return {\n        apply: (context) => Math.atan(code.apply(context)),\n        code: _.concat(code.code, ['atan'])\n    };\n}\nfunction createLog(code) {\n    return {\n        apply: (context) => Math.log(code.apply(context)),\n        code: _.concat(code.code, ['log'])\n    };\n}\nfunction createSinh(code) {\n    return {\n        apply: (context) => Math.sinh(code.apply(context)),\n        code: _.concat(code.code, ['sinh'])\n    };\n}\nfunction createCosh(code) {\n    return {\n        apply: (context) => Math.cosh(code.apply(context)),\n        code: _.concat(code.code, ['cosh'])\n    };\n}\nfunction createTanh(code) {\n    return {\n        apply: (context) => Math.tanh(code.apply(context)),\n        code: _.concat(code.code, ['tanh'])\n    };\n}\nfunction createTrace(code) {\n    return {\n        apply: (context) => code.apply(context).trace(),\n        code: _.concat(code.code, ['trace'])\n    };\n}\nfunction createValueNorma(code) {\n    return {\n        apply: (context) => 1,\n        code: createField(1)\n    };\n}\nfunction createQuatNorma(code) {\n    return {\n        apply: (context) => code.apply(context).norma(),\n        code: _.concat(code.code, ['quatNorma'])\n    };\n}\nfunction createVectNorma(code) {\n    return {\n        apply: (context) => {\n            const v = code.apply(context);\n            const mod = Math.sqrt(v.transpose().multiply(v).values[0][0]);\n            return v.divide(mod);\n        },\n        code: _.concat(code.code, ['vecNorma'])\n    };\n}\n\n// function createVectNorma(code) {\n//     return {\n//         apply: (context) => {\n//             const v = code.apply(context);\n//             const mod = Math.sqrt(v.transpose().multiply(v).values[0][0]);\n//             return v.divide(mod);\n//         },\n//         code: _.concat(code.code, ['vecNorma'])\n//     };\n// }\nfunction createCyl(code) {\n    return {\n        apply: (context) => code.apply(context).cyl(),\n        code: _.concat(code.code, ['cyl'])\n    };\n}\nfunction createSphere(code) {\n    return {\n        apply: (context) => code.apply(context).sphere(),\n        code: _.concat(code.code, ['sphere'])\n    };\n}\nfunction createCyl1(code) {\n    return {\n        apply: (context) => code.apply(context).cyl1(),\n        code: _.concat(code.code, ['cyl1'])\n    };\n}\nfunction createSphere1(code) {\n    return {\n        apply: (context) => code.apply(context).sphere1(),\n        code: _.concat(code.code, ['sphere1'])\n    };\n}\nfunction createValueInverse(code) {\n    return {\n        apply: (context) => 1 / code.apply(context),\n        code: _.concat(code.code, ['inv'])\n    };\n}\nfunction createQuatInverse(code) {\n    return {\n        apply: (context) => code.apply(context).inverse(),\n        code: _.concat(code.code, ['quat inv'])\n    };\n}\nfunction createMatrixInverse(code) {\n    return {\n        apply: (context) => code.apply(context).inverse(),\n        code: _.concat(code.code, ['matrix inv'])\n    };\n}\nfunction createDet(code) {\n    return {\n        apply: (context) => code.apply(context).det(),\n        code: _.concat(code.code, ['det'])\n    };\n}\nfunction createMinVec(code) {\n    return {\n        apply: (context) => code.apply(context).min(),\n        code: _.concat(code.code, ['min vector'])\n    };\n}\nfunction createMinMat(code) {\n    return {\n        apply: (context) => code.apply(context).min(),\n        code: _.concat(code.code, ['min matrix'])\n    };\n}\nfunction createMaxVec(code) {\n    return {\n        apply: (context) => code.apply(context).max(),\n        code: _.concat(code.code, ['max vector'])\n    };\n}\nfunction createMaxMat(code) {\n    return {\n        apply: (context) => code.apply(context).max(),\n        code: _.concat(code.code, ['max matrix'])\n    };\n}\nfunction createAbs(code) {\n    return {\n        apply: (context) => Math.abs(code.apply(context)),\n        code: _.concat(code.code, ['module'])\n    };\n}\n\nexport const OpTreeBuilder = {\n    createDet: createDet,\n    createMatrixInverse: createMatrixInverse,\n    createQuatInverse: createQuatInverse,\n    createValueInverse: createValueInverse,\n    createSphere1: createSphere1,\n    createCyl1: createCyl1,\n    createSphere: createSphere,\n    createCyl: createCyl,\n    createValueNorma: createValueNorma,\n    createQuatNorma: createQuatNorma,\n    createVectNorma: createVectNorma,\n    createTrace: createTrace,\n    createSinh: createSinh,\n    createCosh: createCosh,\n    createTanh: createTanh,\n    createLog: createLog,\n    createAtan: createAtan,\n    createAcos: createAcos,\n    createAsin: createAsin,\n    createTan: createTan,\n    createField: createField,\n    createQuaternion: createQuaternion,\n    createVector: createVector,\n    createMatrix: createMatrix,\n    createRef: createRef,\n    createQrot: createQrot,\n    createNegateField: createNegateField,\n    createNegateQuat: createNegateQuat,\n    createNegateVector: createNegateVector,\n    createNegateMatrix: createNegateMatrix,\n    createProduct: createProduct,\n    createScaleVector: createScaleVector,\n    createScaleMatrix: createScaleMatrix,\n    createScalarProduct: createScalarProduct,\n    createMatrixVectorProduct: createMatrixVectorProduct,\n    createMatrixProduct: createMatrixProduct,\n    createResizeVector: createResizeVector,\n    createResizeMatrix: createResizeMatrix,\n    createVectorModule: createVectorModule,\n    createDivideField: createDivideField,\n    createDivideVector: createDivideVector,\n    createDivideMatrix: createDivideMatrix,\n    createSumField: createSumField,\n    createSumVector: createSumVector,\n    createSumMatrix: createSumMatrix,\n    createSubField: createSubField,\n    createSubVector: createSubVector,\n    createSubMatrix: createSubMatrix,\n    createPower: createPower,\n    createCatField: createCatField,\n    createInsertFieldAt: createInsertFieldAt,\n    createCatVector: createCatVector,\n    createInsertVector: createInsertVector,\n    createAppendVector: createAppendVector,\n    createAppendMatrix: createAppendMatrix,\n    createTransposeMatrix: createTransposeMatrix,\n    createSin: createSin,\n    createCos: createCos,\n    createExp: createExp,\n    createQuatModule: createQuatModule,\n    createSumQuatField: createSumQuatField,\n    createSumQuat: createSumQuat,\n    createSubFieldQuat: createSubFieldQuat,\n    createSubQuatField: createSubQuatField,\n    createSubQuat: createSubQuat,\n    createField2Quat: createField2Quat,\n    createScaleQuat: createScaleQuat,\n    createProductQuat: createProductQuat,\n    createDivQuatField: createDivQuatField,\n    createDivQuat: createDivQuat,\n    createSqrt: createSqrt,\n    createMinVec: createMinVec,\n    createMinMat: createMinMat,\n    createMaxVec: createMaxVec,\n    createMaxMat: createMaxMat,\n    createAbs: createAbs\n};\n","import { default as _ } from 'lodash';\nimport { OpTreeBuilder } from './tensor-0.1.3';\n\nconst NumberToken = 'Number';\nconst IdToken = 'Identifier';\nconst SymbolToken = 'Symbol';\nconst Lexer = require('flex-js');\n\nconst IdentifierRegex = /[a-zA-Z_][a-zA-Z0-9_]*/;\nconst SingleIdentifierRegex = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\nconst NumberRegex = /\\d+\\.?\\d*/;\nconst ExpNumberRegex = /\\d+\\.?\\d*[eE][+-]?\\d+/;\n\nconst ReservedKeywordsRegex = /^i$|^j$|^k$|^I\\d+$|^dt$|^ex$|^ey$|^ez$|^e\\d+$|^tr$|^det$|^n$|^T$|^inv$|^exp$|^sinh$|^cosh$|^tanh$|^sin$|^cos$|^tan$|^asin$|^acos$|^atan$|^log$|^sqrt$|^cyl$|^sphere$|^cyl1$|^sphere1$|^qrot$|^e$|^PI$|^min$|^max$/;\n\nfunction createMissingReferenceResult(id) {\n    return new CodeResult(FieldType, 0, 0, [OpTreeBuilder.createField(0)], ['Unresolved reference ' + id]);\n}\n\nexport function checkForIdentifier(name) {\n    if (!name.match(SingleIdentifierRegex)) {\n        return 'Name \"' + name + '\" must be an identifier';\n    } else if (name.match(ReservedKeywordsRegex)) {\n        return 'Name \"' + name + '\" must not be a reserved keyword';\n    } else {\n        return null;\n    }\n}\n\nclass Builder {\n    constructor(conf) {\n        this._conf = conf;\n    }\n\n    build() {\n        this._defs = {\n            vars: {},\n            funcs: {}\n        };\n        _.each(this._conf.funcs, (data, ref) => {\n            this.buildRef(ref);\n        });\n        _.each(this._conf.vars, (data, ref) => {\n            this.buildRef(ref);\n        });\n\n        _.each(this._conf.funcs, (data, ref) => {\n            const defs = this._defs.funcs[ref];\n            data.errors = defs ? _.concat(data.errors, defs.errors) : data.errors;\n            data.result = defs;\n        });\n        _.each(this._conf.vars, (data, ref) => {\n            const defs = this._defs.vars[ref];\n            data.errors = defs ? _.concat(data.errors, defs.errors) : data.errors;\n            data.result = defs;\n        });\n        _.each(this._conf.update, (data, ref) => {\n            const defs = this.buildExp(data.node);\n            data.errors = defs ? _.concat(data.errors, defs.errors) : data.errors;\n            data.result = defs;\n        });\n        _.each(this._conf.bodies, (data, ref) => {\n            const defs = this.buildExp(data.position.node);\n            data.position.errors = defs ? _.concat(data.position.errors, defs.errors) : data.position.errors;\n            data.position.result = defs;\n            if (data.rotation) {\n                const defs = this.buildExp(data.rotation.node);\n                data.rotation.errors = defs ? _.concat(data.rotation.errors, defs.errors) : data.rotation.errors;\n                data.rotation.result = defs;\n            }\n        });\n        return this._conf;\n    }\n\n    buildRef(ref) {\n        // Check if already validated\n        const def = this._defs.funcs[ref] || this._defs.vars[ref];\n        if (def) {\n            return def;\n        }\n        const varDef = this._conf.vars[ref];\n        const funcDef = this._conf.funcs[ref];\n        if (funcDef) {\n            this._defs.funcs[ref] = CircularResferenceResult;\n            this._defs.funcs[ref] = this.buildExp(funcDef.node);\n            return this._defs.funcs[ref];\n        } else if (varDef) {\n            this._defs.vars[ref] = CircularResferenceResult;\n            this._defs.vars[ref] = this.buildExp(varDef.node);\n            return this._defs.vars[ref];\n        } else {\n            return createMissingReferenceResult(ref);\n        }\n    }\n\n    buildExp(node) {\n        return node.build(this);\n    }\n}\n\nclass System {\n    constructor(vars, funcs, update, bodies) {\n        this._vars = vars;\n        this._funcs = funcs;\n        this._update = update;\n        this._bodies = bodies;\n    }\n\n\n    next(dt) {\n        return this.withDt(dt).nextState();\n    }\n\n    nextState() {\n        const vars = _.mapValues(this._vars, (value, ref) => {\n            const update = this._update[ref];\n            return update ? update.apply(this) : value;\n        });\n        return new System(vars, this._funcs, this._update, this._bodies);\n    }\n\n    withDt(dt) {\n        const funcs = _.cloneDeep(this._funcs);\n        funcs.dt = OpTreeBuilder.createField(dt);\n        return new System(this._vars, funcs, this._update, this._bodies);\n    }\n\n    resolve(id) {\n        const funcCode = this._funcs[id];\n        if (funcCode) {\n            return funcCode.apply(this);\n        }\n        return this._vars[id];\n    }\n\n    get bodies() {\n        return _.map(this._bodies, data => {\n            const result = {\n                position: data.position.apply(this)\n            };\n            if (data.rotation) {\n                result.rotation = data.rotation.apply(this);\n            }\n            return result;\n        });\n    }\n\n    dump() {\n        const funcs = _.mapValues(this._funcs, func => func.apply(this));\n        return _.assign(funcs, this._vars);\n    }\n\n    dumpWithDt(dt) {\n        return this.withDt(dt).dump();\n    }\n}\n\nexport class SystemParser {\n\n    constructor(config) {\n        this._config = config;\n        this._parserAst = new ParserAst();\n    }\n\n    /* Returns the error report and the initial state of simulated system */\n    parse() {\n        const conf1 = this.parseAll();\n        const conf1_1 = this.checkForNameDefinitions(conf1);\n        const conf2 = this.checkForFunctionsRedefinition(conf1_1);\n        const conf3 = this.checkForUpdateDefinition(conf2);\n        const conf4 = this.build(conf3);\n        const conf5 = this.checkForUpdateTypeDefinition(conf4);\n        const conf = this.checkForBodiesTypeDefinition(conf5);\n\n        const errors = this.createErrors(conf);\n        const system = this.errorCount(conf) === 0 ? this.buildSystem(conf) : undefined;\n        return {\n            parserState: conf,\n            errors: errors,\n            system: system\n        };\n    }\n\n    /* Checks for correct definition names */\n    checkForNameDefinitions(conf) {\n        _(conf.update).each((data, name) => {\n            const err = checkForIdentifier(name);\n            if (err) {\n                data.errors.push(err);\n            }\n        });\n        _(conf.funcs).each((data, name) => {\n            const err = checkForIdentifier(name);\n            if (err) {\n                data.errors.push(err);\n            }\n        });\n        _(conf.vars).each((data, name) => {\n            const err = checkForIdentifier(name);\n            if (err) {\n                data.errors.push(err);\n            }\n        });\n        return conf;\n    }\n\n    /* Returns the AST all all definition by parseing all config definitions */\n    parseAll() {\n        const vars = _.mapValues(this._config.vars, exp => {\n            const node = this._parserAst.parse(exp);\n            return {\n                exp: exp,\n                errors: this._parserAst.errors,\n                node: node\n            }\n        });\n        const funcs = _.mapValues(this._config.funcs, exp => {\n            const node = this._parserAst.parse(exp);\n            return {\n                exp: exp,\n                errors: this._parserAst.errors,\n                node: node\n            }\n        });\n        const bodies = _.map(this._config.bodies, c => {\n            const positionNode = this._parserAst.parse(c.position);\n            const positionErrors = this._parserAst.errors;\n            const result = {\n                position: {\n                    exp: c.position,\n                    errors: positionErrors,\n                    node: positionNode\n                }\n            };\n            if (c.rotation) {\n                const node = this._parserAst.parse(c.rotation);\n                const errors = this._parserAst.errors;\n                result.rotation = {\n                    exp: c.rotation,\n                    errors: errors,\n                    node: node\n                }\n            }\n            return result;\n        });\n        const update = _.mapValues(this._config.update, exp => {\n            const node = this._parserAst.parse(exp);\n            return {\n                exp: exp,\n                errors: this._parserAst.errors,\n                node: node\n            }\n        });\n        this._result = {\n            vars: vars,\n            funcs: funcs,\n            bodies: bodies,\n            update: update\n        };\n        return this._result;\n    }\n\n    /* Returns the number of errors of the parser state */\n    errorCount(conf) {\n        return _(conf.vars).map(data => data.errors.length).sum()\n            + _(conf.funcs).map(data => data.errors.length).sum()\n            + _(conf.update).map(data => data.errors.length).sum()\n            + _(conf.bodies).map(data => data.position.errors.length\n                + (data.rotation ? data.rotation.errors.length : 0)).sum();\n    }\n\n    /* Returns the parser state after checking the correct match between\n     * between update and variable types\n     */\n    checkForBodiesTypeDefinition(conf) {\n        _.each(conf.bodies, data => {\n            const posResult = data.position.result;\n            if (!(posResult.type === VectorType)) {\n                data.position.errors.push('Position must be a vector');\n            }\n            if (data.rotation) {\n                const rotType = data.rotation.result;\n                if (!(rotType.type === QuaternionType)) {\n                    data.rotation.errors.push('Rotation must be a quaternion');\n                }\n            }\n        });\n        return conf;\n    }\n\n    /* Returns the error report from a parser state */\n    createErrors(conf5) {\n        return {\n            funcs: _.mapValues(conf5.funcs, 'errors'),\n            vars: _.mapValues(conf5.vars, 'errors'),\n            update: _.mapValues(conf5.update, 'errors'),\n            bodies: _.map(conf5.bodies, body => {\n                const result = {\n                    position: body.position.errors\n                };\n                if (body.rotation) {\n                    result.rotation = body.rotation.errors;\n                }\n                return result;\n            })\n        };\n    }\n\n    /* Returns the initial state of simulated system from the parser state */\n    buildSystem(conf) {\n        const funcsCode = _.mapValues(conf.funcs, data => data.result.code);\n        const varsCode = _.mapValues(conf.vars, data => data.result.code);\n        const resolver = {\n            resolve: id => {\n                const code = funcsCode[id] || varsCode[id];\n                const result = code.apply(resolver);\n                return result;\n            }\n        }\n        const vars = _.mapValues(conf.vars, data => data.result.code.apply(resolver));\n\n        const updateCode = _.mapValues(conf.update, data => data.result.code);\n        const bodiesCode = _.map(conf.bodies, data => {\n            const posCode = data.position.result.code;\n            const posCode1 = data.position.result.rows !== 3 ? OpTreeBuilder.createResizeVector(posCode, 3) : posCode;\n            const result = {\n                position: posCode1\n            }\n            if (data.rotation) {\n                if (data.rotation.result.type === QuaternionType) {\n                    result.rotation = data.rotation.result.code;\n                } else {\n                    result.rotation = OpTreeBuilder.createField2Quat(data.rotation.result.code);\n                }\n            }\n            return result;\n        });\n        return new System(vars, funcsCode, updateCode, bodiesCode);\n    }\n\n    /* Returns the parser state with the operation tree of configuration */\n    build(conf) {\n        return new Builder(conf).build();\n    }\n\n    /* Returns the parser state after checking the correct match\n     * between update and variable definitions\n     */\n    checkForUpdateDefinition(conf) {\n\n        function isVar(ref) {\n            return conf.vars[ref] !== undefined;\n        }\n\n        _(conf.update).each((data, ref) => {\n            if (!isVar(ref)) {\n                data.errors.push('Update ' + ref + ' is not a variable')\n            }\n        });\n        return conf;\n    }\n\n    /* Returns the parser state after checking the absence of override\n     * between function and variable definitions\n     */\n    checkForFunctionsRedefinition(conf) {\n\n        function isFunction(ref) {\n            return ref === 'dt' || conf.funcs[ref] !== undefined;\n        }\n\n        _(conf.vars).each((data, ref) => {\n            if (isFunction(ref)) {\n                data.errors.push('Function ' + ref + ' cannot be redefined as variable')\n            }\n        });\n\n        return conf;\n    }\n\n    /* Returns the parser state after checking the correct match between\n     * between update and variable types\n     */\n    checkForUpdateTypeDefinition(conf) {\n\n        function typeName(varResult) {\n            switch (varResult.type) {\n                case FieldType:\n                    return 'scalar';\n                case QuaternionType:\n                    return 'quaternion';\n                case VectorType:\n                    return 'vector [' + varResult.rows + ']';\n                default:\n                    return 'matrix [' + varResult.rows + ', ' + varResult.cols + ']';\n            }\n        }\n\n        _.each(conf.update, (data, ref) => {\n            const varResult = conf.vars[ref] && conf.vars[ref].result;\n            if (varResult) {\n                const upResult = data.result;\n                const wrongType = varResult.type === upResult.type && (\n                    varResult.type === FieldType\n                    || (varResult.type === VectorType && varResult.rows === upResult.rows)\n                    || (varResult.type === MatrixType\n                        && varResult.rows === upResult.rows\n                        && varResult.rows === upResult.rows));\n                if (!wrongType) {\n\n                    // var varTypeName = '';\n                    data.errors.push('Update ('\n                        + typeName(upResult)\n                        + ') must be the same of var ('\n                        + typeName(varResult) + ')');\n                }\n            }\n        });\n        return conf;\n    }\n}\n\nconst FieldType = \"Field\";\nconst QuaternionType = \"Quaternion\";\nconst VectorType = \"Vector\";\nconst MatrixType = \"Matrix\";\n\nclass CodeResult {\n    constructor(type, rows, cols, code, errors) {\n        this._type = type;\n        this._rows = rows || 0;\n        this._cols = cols || 0;\n        this._code = code || [];\n        this._errors = errors || [];\n    }\n\n    get code() { return this._code; }\n    get rows() { return this._rows; }\n    get cols() { return this._cols; }\n    get type() { return this._type; }\n    get errors() { return this._errors; }\n\n    withType(type) { return new CodeResult(type, this.rows, this.cols, this.code, this.errors); }\n    withRows(rows) { return new CodeResult(this.type, rows, this.cols, this.code, this.errors); }\n    withCols(cols) { return new CodeResult(this.type, this.rows, cols, this.code, this.errors); }\n    withSize(rows, cols) { return new CodeResult(this.type, rows, cols, this.code, this.errors); }\n    withCode(code) {\n        return new CodeResult(this.type, this.rows, this.cols, code, this.errors);\n    }\n    withErrors(errors) {\n        return new CodeResult(this.type, this.rows, this.cols, this.code, errors);\n    }\n    withMoreErrors() {\n        return this.withErrors(_.flatten(_.concat(this._errors, arguments)));\n    }\n    withTypeOf(other) {\n        return new CodeResult(other.type, other.rows, other.cols, this.code, this.errors);\n    }\n}\n\nconst CircularResferenceResult = new CodeResult(FieldType, 0, 0, [OpTreeBuilder.createField(0)], [\"Circular reference\"]);\n\nclass ASTNode {\n    get dependencies() { return []; }\n    // Returns the type of result and related errors\n    validate(context) { throw new Error('Not implemented'); }\n    // Returns the type of result, the generated code and errors\n    build() { throw new Error('Not implemented'); }\n}\n\n/* Constant real value */\nclass ConstantNode extends ASTNode {\n    constructor(value) {\n        super();\n        this._value = value;\n    }\n    get value() { return this._value; }\n    build(context) { return new CodeResult(FieldType, 0, 0, OpTreeBuilder.createField(this.value)); }\n}\n\n/* Constant Quaternion value */\nclass ConstantQuatNode extends ASTNode {\n    constructor(value) {\n        super();\n        this._value = value;\n    }\n    get value() { return this._value; }\n    build(context) { return new CodeResult(QuaternionType, 0, 0, OpTreeBuilder.createQuaternion(this.value)); }\n}\n\nclass BaseNode extends ASTNode {\n    constructor(size) {\n        super();\n        this._size = size;\n    }\n    get size() { return this._size; }\n    build(builder) {\n        const value = _.map(_.range(this.size + 1), i => i === this.size ? 1 : 0);\n        return new CodeResult(VectorType, this.size + 1, 0, OpTreeBuilder.createVector(value));\n    }\n\n}\n\nclass IdentityNode extends ASTNode {\n    constructor(size) {\n        super();\n        this._size = size;\n    }\n    get size() { return this._size; }\n    build(builder) {\n        const value = _.map(_.range(this.size), i =>\n            _.map(_.range(this.size), j =>\n                i === j ? 1 : 0\n            ));\n        return new CodeResult(MatrixType, this.size, this.size, OpTreeBuilder.createMatrix(value));\n    }\n}\n\nclass RefNode extends ASTNode {\n    constructor(id) {\n        super();\n        this._id = id;\n\n    }\n    get dependencies() { return [this.id]; }\n    get id() { return this._id; }\n\n    build(builder) {\n        return builder.buildRef(this.id).withCode(OpTreeBuilder.createRef(this.id));\n    }\n}\n\nclass DtRefNode extends ASTNode {\n    constructor(id) {\n        super();\n        this._id = id;\n\n    }\n\n    build(builder) {\n        return new CodeResult(FieldType, 0, 0, OpTreeBuilder.createRef('dt'));\n    }\n}\n\nclass UnaryNode extends ASTNode {\n    constructor(arg) {\n        super();\n        this._arg = arg;\n    }\n\n    get dependencies() { return this.arg.dependencies; }\n\n    get arg() { return this._arg; }\n}\n\nclass NegNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createNegateField(op.code));\n            case QuaternionType:\n                return op.withCode(OpTreeBuilder.createNegateQuat(op.code));\n            case VectorType:\n                return op.withCode(OpTreeBuilder.createNegateVector(op.code));\n            default:\n                return op.withCode(OpTreeBuilder.createNegateMatrix(op.code));\n\n        }\n    }\n}\n\nclass ModNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createAbs(op.code));\n            case QuaternionType:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createQuatModule(op.code));\n            case VectorType:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createVectorModule(op.code));\n            default:\n                return op.withMoreErrors(['Invalid module operation on matrix']);\n        }\n    }\n}\n\nclass TransposeNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withMoreErrors(['Invalid transpose operation on value']);\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid transpose operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid transpose operation on vector']);\n            default:\n                return op.withSize(op.cols, op.rows).withCode(OpTreeBuilder.createTransposeMatrix(op.code));\n        }\n    }\n}\n\nclass SqrtNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createSqrt(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid sqrt operation on quaterion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid sqrt operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid sqrt operation on matrix']);\n        }\n    }\n}\n\nclass ExpNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createExp(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid exp operation on quaterion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid exp operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid exp operation on matrix']);\n        }\n    }\n}\n\nclass SinNode extends UnaryNode {\n\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createSin(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid sin operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid sin operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid sin operation on matrix']);\n        }\n    }\n}\n\nclass CosNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createCos(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid cos operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid cos operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid cos operation on matrix']);\n        }\n    }\n}\nclass TanNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createTan(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid tan operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid tan operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid tan operation on matrix']);\n        }\n    }\n}\n\nclass AsinNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createAsin(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid asin operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid asin operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid asin operation on matrix']);\n        }\n    }\n}\n\nclass AcosNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createAcos(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid acos operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid acos operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid acos operation on matrix']);\n        }\n    }\n}\n\nclass AtanNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createAtan(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid atan operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid atan operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid atan operation on matrix']);\n        }\n    }\n}\n\nclass SinhNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createSinh(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid sinh operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid sinh operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid sinh operation on matrix']);\n        }\n    }\n}\n\nclass CoshNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createCosh(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid cosh operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid cosh operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid cosh operation on matrix']);\n        }\n    }\n}\n\nclass TanhNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createTanh(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid tanh operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid tanh operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid tanh operation on matrix']);\n        }\n    }\n}\n\nclass LogNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createLog(op.code));\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid log operation on quaternion']);\n            case VectorType:\n                return op.withMoreErrors(['Invalid log operation on vector']);\n            default:\n                return op.withMoreErrors(['Invalid log operation on matrix']);\n        }\n    }\n}\n\nclass QrotNode extends UnaryNode {\n    build(context) {\n        const op = this.arg.build(context);\n        switch (op.type) {\n            case FieldType:\n                return op.withMoreErrors(['Invalid qrot operation on value']);\n            case QuaternionType:\n                return op.withMoreErrors(['Invalid qrot operation on quaternion']);\n            case VectorType:\n                const c1 = (op.rows !== 3) ? OpTreeBuilder.createResizeVector(op.code, 3) : op.code;\n                return op.withType(QuaternionType).withCode(OpTreeBuilder.createQrot(c1));\n            default:\n                return op.withMoreErrors(['Invalid qrot operation on matrix']);\n        }\n    }\n}\n\nclass BinaryNode extends ASTNode {\n    constructor(arg1, arg2) {\n        super();\n        this._arg1 = arg1;\n        this._arg2 = arg2;\n    }\n\n    get dependencies() {\n        return _.concat(\n            this.arg1.dependencies,\n            this.arg2.dependencies);\n    }\n\n    get arg1() { return this._arg1; }\n    get arg2() { return this._arg2; }\n}\n\nclass PwrNode extends BinaryNode {\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createPower(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid power value and quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid power value and vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid power value and matrix']);\n                }\n            case QuaternionType:\n                return op1.withMoreErrors(op2.errors, ['Invalid power quaternion and anything']);\n            case VectorType:\n                return op1.withMoreErrors(op2.errors, ['Invalid power vector and anything']);\n            default:\n                return op1.withMoreErrors(op2.errors, ['Invalid power matrix and anything']);\n        }\n    }\n}\n\nclass CatNode extends BinaryNode {\n\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withType(VectorType)\n                            .withRows(2).withCode(OpTreeBuilder.createCatField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid append value and quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors).withType(VectorType)\n                            .withRows(op2.rows + 1).withCode(OpTreeBuilder.createInsertFieldAt(op2.code, op1.code, 0));\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid append value and matrix']);\n                }\n            case QuaternionType:\n                return op1.withMoreErrors(op2.errors, ['Invalid append quaternion and anything']);\n            case VectorType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withRows(op1.rows + 1)\n                            .withCode(OpTreeBuilder.createInsertFieldAt(op1.code, op2.code, op1.rows));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid append vector and quaternion']);\n                    case VectorType: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeVector(op1.code, op2.rows) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.rows) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withType(MatrixType)\n                            .withSize(Math.max(op1.rows, op2.rows), 2).withCode(OpTreeBuilder.createCatVector(c1, c2));\n                    }\n                    default: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeVector(op1.code, op2.rows) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeMatrix(op2.code, op1.rows, op2.cols) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withType(MatrixType)\n                            .withSize(Math.max(op1.rows, op2.rows), op1.cols + 1).withCode(OpTreeBuilder.createInsertVector(c2, c1));\n                    }\n                }\n            default:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid append matrix and value']);\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid append matrix and quaternion']);\n                    case VectorType: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeMatrix(op1.code, op2.rows, op1.cols) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.rows, op2.cols) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withType(MatrixType)\n                            .withSize(Math.max(op1.rows, op2.rows), op1.cols + 1).withCode(OpTreeBuilder.createAppendVector(c1, c2));\n                    }\n                    default: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeMatrix(op1.code, op2.rows, op1.cols) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeMatrix(op2.code, op1.rows, op2.cols) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withType(MatrixType)\n                            .withSize(Math.max(op1.rows, op2.rows), op1.cols + op2.cols).withCode(OpTreeBuilder.createAppendMatrix(c1, c2));\n                    }\n                }\n        }\n    }\n}\n\nclass AddNode extends BinaryNode {\n\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSumField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors).withType(QuaternionType).withCode(OpTreeBuilder.createSumQuatField(op2.code, op1.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum value and vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum value and matrix']);\n                }\n            case QuaternionType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSumQuatField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSumQuat(op1.code, op2.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum quaternion and vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum quaternion and matrix']);\n                }\n            case VectorType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum vector and value']);\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum vector and quaternion']);\n                    case VectorType: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeVector(op1.code, op2.rows) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.rows) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withRows(Math.max(op1.rows, op2.rows)).withCode(OpTreeBuilder.createSumVector(c1, c2));\n                    }\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum vector and matrix']);\n                }\n            default:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum matrix and value']);\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum matrix and quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sum matrix and vector']);\n                    default: {\n                        // Resize\n                        const n = Math.max(op1.rows, op2.rows);\n                        const m = Math.max(op1.cols, op2.cols);\n                        const c1 = (op1.rows < op2.rows || op1.cols < op2.cols) ?\n                            OpTreeBuilder.createResizeMatrix(op1.code, n, m) :\n                            op1.code;\n                        const c2 = (op1.rows > op2.rows || op1.cols > op2.cols) ?\n                            OpTreeBuilder.createResizeMatrix(op2.code, n, m) :\n                            op2.code;\n                        return op1.withMoreErrors(op2.errors).withSize(n, m)\n                            .withCode(OpTreeBuilder.createSumMatrix(c1, c2));\n                    }\n                }\n        }\n    }\n}\n\nclass SubNode extends BinaryNode {\n\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSubField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors).withType(QuaternionType).withCode(OpTreeBuilder.createSubFieldQuat(op1.code, op2.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub value and vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub value and matrix']);\n                }\n            case QuaternionType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSubQuatField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createSubQuat(op1.code, op2.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub quaternion and vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub quaternion and matrix']);\n                }\n            case VectorType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub vector and value']);\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub vector and quaternion']);\n                    case VectorType: {\n                        //Resize\n                        const c1 = op1.rows < op2.rows ? OpTreeBuilder.createResizeVector(op1.code, op2.rows) : op1.code;\n                        const c2 = op1.rows > op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.rows) : op2.code;\n                        return op1.withMoreErrors(op2.errors).withRows(Math.max(op1.rows, op2.rows))\n                            .withCode(OpTreeBuilder.createSubVector(c1, c2));\n                    }\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub vector and matrix']);\n                }\n            default:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub matrix and value']);\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub matrix and quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid sub matrix and vector']);\n                    default: {\n                        const n = Math.max(op1.rows, op2.rows);\n                        const m = Math.max(op1.cols, op2.cols);\n                        // Resize\n                        const c1 = (op1.rows < op2.rows || op1.cols < op2.cols) ?\n                            OpTreeBuilder.createResizeMatrix(op1.code, n, m) :\n                            op1.code;\n                        const c2 = (op1.rows > op2.rows || op1.cols > op2.cols) ?\n                            OpTreeBuilder.createResizeMatrix(op2.code, n, m) :\n                            op2.code;\n                        return op1.withMoreErrors(op2.errors).withSize(n, m)\n                            .withCode(OpTreeBuilder.createSubMatrix(c1, c2));\n                    }\n                }\n        }\n    }\n}\n\nclass MulNode extends BinaryNode {\n\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createProduct(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withTypeOf(op2).withMoreErrors(op2.errors).withType(QuaternionType).withCode(OpTreeBuilder.createScaleQuat(op2.code, op1.code));\n                    case VectorType:\n                        return op1.withTypeOf(op2).withMoreErrors(op2.errors).withCode(OpTreeBuilder.createScaleVector(op2.code, op1.code));\n                    default:\n                        return op1.withTypeOf(op2).withMoreErrors(op2.errors).withCode(OpTreeBuilder.createScaleMatrix(op2.code, op1.code));\n                }\n            case QuaternionType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withType(QuaternionType).withCode(OpTreeBuilder.createScaleQuat(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withTypeOf(op2).withMoreErrors(op2.errors).withType(QuaternionType).withCode(OpTreeBuilder.createProductQuat(op1.code, op2.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid multiplication quaternion by vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid multiplication quaternion by matrix']);\n                }\n            case VectorType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createScaleVector(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid multiplication vector by quaternion']);\n                    case VectorType: {\n                        const c1 = op1.rows > op2.rows ? OpTreeBuilder.createResizeVector(op1.code, op2.rows) : op1.code;\n                        const c2 = op1.rows < op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.rows) : op2.code;\n                        return op1.withType(FieldType).withMoreErrors(op2.errors).withCode(OpTreeBuilder.createScalarProduct(c1, c2));\n                    }\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid multiplication vector by matrix']);\n                }\n            default:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createScaleMatrix(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid multiplication matrix by quaternion']);\n                    case VectorType: {\n                        const c1 = op1.cols > op2.rows ? OpTreeBuilder.createResizeMatrix(op1.code, op1.rows, op2.rows) : op1.code;\n                        const c2 = op1.cols < op2.rows ? OpTreeBuilder.createResizeVector(op2.code, op1.cols) : op2.code;\n                        return op1.withTypeOf(VectorType)\n                            .withRows(op1.rows).withMoreErrors(op2.errors)\n                            .withCode(OpTreeBuilder.createMatrixVectorProduct(c1, c2));\n                    }\n                    default: {\n                        const c1 = op1.cols > op2.rows ? OpTreeBuilder.createResizeMatrix(op1.code, op1.rows, op2.rows) : op1.code;\n                        const c2 = op1.cols < op2.rows ? OpTreeBuilder.createResizeMatrix(op2.code, op1.cols, op2.cols) : op2.code;\n                        return op1.withSize(op1.rows, op2.cols).withMoreErrors(op2.errors).withCode(OpTreeBuilder.createMatrixProduct(c1, c2));\n                    }\n                }\n        }\n    }\n}\n\nclass DivNode extends BinaryNode {\n\n    build(context) {\n        const op1 = this.arg1.build(context);\n        const op2 = this.arg2.build(context);\n\n        switch (op1.type) {\n            case FieldType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createDivideField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division value by quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division value by vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division value by matrix']);\n                }\n            case QuaternionType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createDivQuatField(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createDivQuat(op1.code, op2.code));\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division quaternion by vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division quaternion by matrix']);\n                }\n            case VectorType:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createDivideVector(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division vector by quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division vector by vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division vector by matrix']);\n                }\n            default:\n                switch (op2.type) {\n                    case FieldType:\n                        return op1.withMoreErrors(op2.errors).withCode(OpTreeBuilder.createDivideMatrix(op1.code, op2.code));\n                    case QuaternionType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division matrix by quaternion']);\n                    case VectorType:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division matrix by vector']);\n                    default:\n                        return op1.withMoreErrors(op2.errors, ['Invalid division matrix by matrix']);\n                }\n        }\n    }\n}\n\nclass TraceNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op;\n            case QuaternionType:\n                return op.withErrors(['Invalid trace on quaternion']);\n            case VectorType:\n                return op.withErrors(['Invalid trace on vector']);\n            default:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createTrace(op.code));\n\n        }\n    }\n}\n\nclass NormaNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createValueNorma(op.code));\n            case QuaternionType:\n                return op.withCode(OpTreeBuilder.createQuatNorma(op.code));\n            case VectorType:\n                return op.withCode(OpTreeBuilder.createVectNorma(op.code));\n            default:\n                return op.withErrors(['Invalid norma on matrix']);\n        }\n    }\n}\n\nclass CylNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withErrors(['Invalid cyl on value']);\n            case QuaternionType:\n                return op.withErrors(['Invalid cyl on quaternion']);\n            case VectorType:\n                const c1 = op.rows !== 3 ? OpTreeBuilder.createResizeVector(op.code, 3) : op.code;\n                return op.withCode(OpTreeBuilder.createCyl(c1));\n            default:\n                return op.withErrors(['Invalid cyl on matrix']);\n        }\n    }\n}\n\nclass SphereNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withErrors(['Invalid sphere on value']);\n            case QuaternionType:\n                return op.withErrors(['Invalid sphere on quaternion']);\n            case VectorType:\n                const c1 = op.rows !== 3 ? OpTreeBuilder.createResizeVector(op.code, 3) : op.code;\n                return op.withCode(OpTreeBuilder.createSphere(c1));\n            default:\n                return op.withErrors(['Invalid sphere on matrix']);\n        }\n    }\n}\n\nclass Cyl1Node extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withErrors(['Invalid cyl on value']);\n            case QuaternionType:\n                return op.withErrors(['Invalid cyl on quaternion']);\n            case VectorType:\n                const c1 = op.rows !== 3 ? OpTreeBuilder.createResizeVector(op.code, 3) : op.code;\n                return op.withType(MatrixType).withSize(3, 3).withCode(OpTreeBuilder.createCyl1(c1));\n            default:\n                return op.withErrors(['Invalid cyl on matrix']);\n        }\n    }\n}\n\nclass Sphere1Node extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withErrors(['Invalid cyl on value']);\n            case QuaternionType:\n                return op.withErrors(['Invalid cyl on quaternion']);\n            case VectorType:\n                const c1 = op.rows !== 3 ? OpTreeBuilder.createResizeVector(op.code, 3) : op.code;\n                return op.withType(MatrixType).withSize(3, 3).withCode(OpTreeBuilder.createSphere1(c1));\n            default:\n                return op.withErrors(['Invalid cyl on matrix']);\n        }\n    }\n}\n\nclass InverseNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withCode(OpTreeBuilder.createValueInverse(op.code));\n            case QuaternionType:\n                return op.withCode(OpTreeBuilder.createQuatInverse(op.code));\n            case VectorType:\n                return op.withErrors(['Invalid inv on vector']);\n            default:\n                if (op.rows !== op.cols)\n                    return op.withErrors(['Invalid inv on not square matrix']);\n                else\n                    return op.withCode(OpTreeBuilder.createMatrixInverse(op.code));\n        }\n    }\n}\n\nclass DetNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op.withErrors(['Invalid det on value']);\n            case QuaternionType:\n                return op.withErrors(['Invalid det on quaternion']);\n            case VectorType:\n                return op.withErrors(['Invalid det on vector']);\n            default:\n                if (op.rows !== op.cols)\n                    return op.withErrors(['Invalid det on not square matrix']);\n                else\n                    return op.withCode(OpTreeBuilder.createDet(op.code));\n        }\n    }\n}\n\nclass MinNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op;\n            case QuaternionType:\n                return op.withErrors(['Invalid min on quaternion']);\n            case VectorType:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createMinVec(op.code));\n            default:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createMinMat(op.code));\n        }\n    }\n}\n\nclass MaxNode extends UnaryNode {\n    build(builder) {\n        const op = this.arg.build(builder)\n        switch (op.type) {\n            case FieldType:\n                return op;\n            case QuaternionType:\n                return op.withErrors(['Invalid max on quaternion']);\n            case VectorType:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createMaxVec(op.code));\n            default:\n                return op.withType(FieldType).withCode(OpTreeBuilder.createMaxMat(op.code));\n        }\n    }\n}\n\nconst DefaultNode = new ConstantNode('0');\n\nconst UnaryFunctions = {\n    sin: (arg) => new SinNode(arg),\n    cos: (arg) => new CosNode(arg),\n    tan: (arg) => new TanNode(arg),\n    asin: (arg) => new AsinNode(arg),\n    acos: (arg) => new AcosNode(arg),\n    atan: (arg) => new AtanNode(arg),\n    sinh: (arg) => new SinhNode(arg),\n    cosh: (arg) => new CoshNode(arg),\n    tanh: (arg) => new TanhNode(arg),\n    exp: (arg) => new ExpNode(arg),\n    log: (arg) => new LogNode(arg),\n    sqrt: (arg) => new SqrtNode(arg),\n    T: (arg) => new TransposeNode(arg),\n    qrot: (arg) => new QrotNode(arg),\n    tr: (arg) => new TraceNode(arg),\n    n: (arg) => new NormaNode(arg),\n    cyl: (arg) => new CylNode(arg),\n    sphere: (arg) => new SphereNode(arg),\n    cyl1: (arg) => new Cyl1Node(arg),\n    sphere1: (arg) => new Sphere1Node(arg),\n    inv: (arg) => new InverseNode(arg),\n    det: (arg) => new DetNode(arg),\n    min: (arg) => new MinNode(arg),\n    max: (arg) => new MaxNode(arg)\n};\n\nclass ParserAst {\n\n    constructor() {\n        this._errors = [];\n        const lexer = new Lexer();\n        lexer.addRule(ExpNumberRegex, k =>\n            this._token = {\n                text: k.text,\n                type: NumberToken\n            });\n        lexer.addRule(NumberRegex, k =>\n            this._token = {\n                text: k.text,\n                type: NumberToken\n            });\n        lexer.addRule(IdentifierRegex, k =>\n            this._token = {\n                text: k.text,\n                type: IdToken\n            });\n        lexer.addRule(/\\s/)\n        lexer.addRule(/./, k =>\n            this._token = {\n                text: k.text,\n                type: SymbolToken\n            });\n        this._lexer = lexer;\n    }\n\n    get errors() { return this._errors; }\n\n    get token() {\n        if (this._token === undefined) {\n            this._lexer.lex();\n        }\n        return this._token;\n    }\n\n    addError(msg) {\n        this._errors.push(msg);\n        return this;\n    }\n\n    parse(code) {\n        this._errors = [];\n        this.discard();\n        this._lexer.setSource(code);\n        const result = this.parseExp();\n        const token = this.token;\n        if (token !== undefined) {\n            this.addError('Unexpected token ' + token.text);\n        }\n        return result;\n    }\n\n    parseExp() {\n        var node = this.parseSum();\n        while (true) {\n            const token = this.token;\n            if (token === undefined) {\n                return node;\n            }\n            switch (token.text) {\n                case ',':\n                    this.discard();\n                    node = new CatNode(node, this.parseSum());\n                    break;\n                default:\n                    return node;\n            }\n        }\n    }\n\n    parseSum() {\n        var node = this.parseFactor();\n        while (true) {\n            const token = this.token;\n            if (token === undefined) {\n                return node;\n            }\n            switch (token.text) {\n                case '+':\n                    this.discard();\n                    node = new AddNode(node, this.parseFactor());\n                    break;\n                case '-':\n                    this.discard();\n                    node = new SubNode(node, this.parseFactor());\n                    break;\n                default:\n                    return node;\n            }\n        }\n    }\n\n    parseFactor() {\n        var node = this.parseUnary();\n        while (true) {\n            const token = this.token;\n            if (token === undefined) {\n                return node;\n            }\n            switch (token.text) {\n                case '*':\n                    this.discard();\n                    node = new MulNode(node, this.parseUnary());\n                    break;\n                case '/':\n                    this.discard();\n                    node = new DivNode(node, this.parseUnary());\n                    break;\n                default:\n                    return node;\n            }\n        }\n    }\n\n    parseUnary() {\n        const token = this.token;\n        if (token === undefined) {\n            this.addError('Expected unary expression');\n            return DefaultNode;\n        }\n        const nodeGen = UnaryFunctions[token.text];\n        if (nodeGen) {\n            this.discard();\n            return nodeGen(this.parseUnary());\n        }\n\n        switch (token.text) {\n            case '+':\n                this.discard();\n                return this.parseUnary();\n            case '-':\n                this.discard();\n                return new NegNode(this.parseUnary());\n            default:\n                return this.parsePwr();\n        }\n    }\n\n    parsePwr() {\n        var baseNode = this.parseTerm();\n        while (true) {\n            const token = this.token;\n            if (token === undefined || token.text !== '^') {\n                return baseNode;\n            }\n            this.discard();\n            const expNode = this.parseTerm();\n            baseNode = new PwrNode(baseNode, expNode);\n        }\n    }\n\n    parseTerm() {\n        function handleId(id) {\n            const baseExp = id.match(/^e([0-9]+)$/);\n            if (baseExp) {\n                return new BaseNode(parseInt(baseExp[1], 10));\n            }\n            const identExp = id.match(/^I([0-9]+)$/);\n            if (identExp) {\n                return new IdentityNode(parseInt(identExp[1], 10));\n            }\n            return new RefNode(id);\n        }\n\n        const token = this.token;\n        if (token === undefined) {\n            this.addError('Expected terminal expression');\n            return DefaultNode;\n        } else {\n            switch (token.type) {\n                case NumberToken:\n                    this.discard();\n                    return new ConstantNode(Number(token.text));\n                case SymbolToken:\n                    switch (token.text) {\n                        case '(': {\n                            this.discard();\n                            const value = this.parseExp();\n                            this.expected(')');\n                            return value;\n                        }\n                        case '|': {\n                            this.discard();\n                            const value = this.parseExp();\n                            this.expected('|');\n                            return new ModNode(value);\n                        }\n                        default:\n                            this.discard();\n                            this.addError('Unexpected token ' + token.text);\n                            return this.parseTerm();\n                    }\n                case IdToken:\n                    switch (token.text) {\n                        case 'PI':\n                            this.discard();\n                            return new ConstantNode(Math.PI);\n                        case 'e':\n                            this.discard();\n                            return new ConstantNode(Math.E);\n                        case 'i':\n                            this.discard();\n                            return new ConstantQuatNode([1, 0, 0, 0]);\n                        case 'j':\n                            this.discard();\n                            return new ConstantQuatNode([0, 1, 0, 0]);\n                        case 'k':\n                            this.discard();\n                            return new ConstantQuatNode([0, 0, 1, 0]);\n                        case 'dt':\n                            this.discard();\n                            return new DtRefNode();\n                        case 'ex':\n                            this.discard();\n                            return new BaseNode(0);\n                        case 'ey':\n                            this.discard();\n                            return new BaseNode(1);\n                        case 'ez':\n                            this.discard();\n                            return new BaseNode(2);\n                        default:\n                            this.discard();\n                            return handleId(token.text);\n                    }\n                default:\n            }\n        }\n    }\n\n    expected(token) {\n        if (!this.token) {\n            this.addError('Expected ' + token + ' found end of text');\n        } else if (this.token.text !== token) {\n            this.addError('Expected ' + token + ' found ' + this.token.text);\n        } else {\n            this.discard();\n        }\n        return this;\n    }\n\n    discard() {\n        delete this._token;\n        return this;\n    }\n}\n","import React, { Component } from 'react';\nimport { InputGroup, Button, Card, Form, Accordion } from 'react-bootstrap';\nimport { ExprField } from './ExprField';\nimport { default as _ } from 'lodash';\nimport { OptionPanel } from './OptionPanel';\nimport { checkForIdentifier } from './leibniz-ast-0.1.1';\nimport { v5 as uuidv5 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst ns = uuidv5('http://www.mmarini.org', uuidv5.URL);\n//const idRegex = /^[a-zA-Z_][a-zA-Z0-9_]*$/g\n\nexport class DefsPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteModalShown: false,\n      newName: '',\n      newNameError: 'Name required'\n    };\n  }\n\n  createDefs() {\n    return _.mapValues(this.props.defs, 'exp');\n  }\n\n  onChange(id, value) {\n    const { onChange, panelKey } = this.props;\n    if (onChange) {\n      const newConf = this.createDefs()\n      newConf[id] = value;\n      onChange(panelKey, newConf);\n    }\n  }\n\n  onDelete(id) {\n    this.showOptionPanel(\n      'Remove \"' + id + '\" definition ?',\n      'The definition \"' + id + '\" will be removed from the list.',\n      () => this.deleteDefs(id));\n  }\n\n  showOptionPanel(title, message, action) {\n    this.setState({\n      deleteModalShown: true,\n      modalTitle: title,\n      modalMessage: message,\n      optionAction: action\n    });\n  }\n\n  deleteDefs(id) {\n    const { onChange, panelKey } = this.props;\n    if (onChange) {\n      const newConf = this.createDefs()\n      delete newConf[id];\n      onChange(panelKey, newConf);\n    }\n    this.hideOptionPanel();\n  }\n\n  hideOptionPanel() {\n    this.setState({\n      deleteModalShown: false\n    });\n  }\n\n  onAdd() {\n    const { onChange, panelKey } = this.props;\n    if (onChange) {\n      const newConf = this.createDefs();\n      newConf[this.state.newName] = '0';\n      onChange(panelKey, newConf);\n    }\n  }\n\n  onName(name) {\n    const state = { newName: name };\n    if (name === '') {\n      state.newNameError = 'Identifier is required';\n    } else if (checkForIdentifier(name)) {\n      state.newNameError = checkForIdentifier(name);\n    } else if (this.props.defs[name]) {\n      state.newNameError = 'Definition already exists';\n    } else {\n      state.newNameError = '';\n    }\n    this.setState(state);\n  }\n\n  hasError() {\n    return _.flatMap(this.props.defs, 'errors').length > 0;\n  }\n\n  render() {\n    const { title, defs } = this.props;\n    const {\n      deleteModalShown, modalTitle, modalMessage, optionAction,\n      newName, newNameError\n    } = this.state;\n\n    const fieldList = _(defs)\n      .toPairs()\n      .sortBy(ary => ary[0])\n      .map(ary => {\n        const key = ary[0];\n        const value = ary[1];\n        const id = uuidv5(key, ns);\n        return (\n          <ExprField key={id} name={key}\n            expr={value.exp}\n            errors={value.errors}\n            onChange={(value) => this.onChange(key, value)}\n            onDelete={() => this.onDelete(key)}></ExprField>\n        );\n      }).value();\n\n    const hasNewNameError = newNameError !== ''\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            {title}\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Form.Group size=\"small\">\n                <InputGroup size=\"sm\" >\n                  <InputGroup.Prepend>Name</InputGroup.Prepend>\n                  <Form.Control type=\"text\"\n                    value={newName}\n                    onChange={(ev) => this.onName(ev.target.value)}\n                    isInvalid={!!hasNewNameError} />\n                  <InputGroup.Append>\n                    <Button variation=\"primary\"\n                      onClick={() => this.onAdd()}\n                      disabled={hasNewNameError}>\n                      <FontAwesomeIcon icon={faPlus} />\n                      <span>Add definition</span>\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">{newNameError}</Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n              <hr></hr>\n              {fieldList}\n              <OptionPanel show={deleteModalShown}\n                title={modalTitle}\n                message={modalMessage}\n                confirmButton=\"Remove\"\n                onCancel={() => this.hideOptionPanel()}\n                onConfirm={() => optionAction()}\n              />\n            </Card.Body >\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ExprField } from './ExprField';\nimport { OptionPanel } from './OptionPanel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport class BodyRow extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShown: false\n    };\n  }\n\n  onAddRotation() {\n    if (this.props.onChange) {\n      const body = {\n        position: this.props.body.position.exp,\n        rotation: '1+0*i'\n      };\n      this.props.onChange(body);\n    }\n  }\n\n  showOptionPanel() {\n    this.setState({ modalShown: true });\n  }\n\n  hideOptionPanel() {\n    this.setState({ modalShown: false });\n  }\n\n  deleteRotation() {\n    if (this.props.onChange) {\n      const body = {\n        position: this.props.body.position.exp\n      };\n      this.props.onChange(body);\n    }\n    this.hideOptionPanel();\n  }\n\n  onDeleteRow() {\n    if (this.props.onDelete) {\n      this.props.onDelete();\n    }\n  }\n\n  onChangePosition(value) {\n    if (this.props.onChange) {\n      const body = (this.props.body.rotation) ?\n        {\n          position: value,\n          rotation: this.props.body.rotation.exp\n        } : {\n          position: value\n        };\n      this.props.onChange(body);\n    }\n  }\n\n  onChangeRotation(value) {\n    if (this.props.onChange) {\n      const body = {\n        position: this.props.body.position.exp,\n        rotation: value\n      };\n      this.props.onChange(body);\n    }\n  }\n\n  render() {\n    const {body} = this.props;\n    const rotField = body.rotation ? (\n      <div>\n        <ExprField name=\"\"\n          expr={body.rotation.exp} errors={body.rotation.errors}\n          onChange={(value) => this.onChangeRotation(value)}\n          onDelete={() => this.showOptionPanel()}\n        />\n        <OptionPanel show={this.state.modalShown}\n          title=\"Remove rotation ?\"\n          message=\"The rotation will be removed from body\"\n          confirmButton=\"Remove\"\n          onConfirm={() => this.deleteRotation()}\n          onCancel={() => this.hideOptionPanel()}\n        />\n      </div>\n    ) : (\n        <Button size=\"sm\" variant=\"danger\" onClick={() => this.onAddRotation()}>\n          <FontAwesomeIcon icon={faPlus} >Add rotation</FontAwesomeIcon>\n        </Button>);\n    return (\n      <tr>\n        <td>{this.props.id + 1}</td>\n        <td>\n          <ExprField name=\"\" expr={body.position.exp}\n            errors={body.position.errors}\n            onChange={(value) => this.onChangePosition(value)}\n            withoutDelete=\"true\"\n          />\n        </td>\n        <td>\n          {rotField}\n        </td>\n        <td>\n          <Button size=\"sm\" variant=\"danger\" onClick={() => this.onDeleteRow()}>\n            <FontAwesomeIcon icon={faTrash} >Remove body</FontAwesomeIcon>\n          </Button>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button, Card, Table } from 'react-bootstrap';\nimport { default as _ } from 'lodash';\nimport { BodyRow } from './BodyRow';\nimport { OptionPanel } from './OptionPanel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nclass BodiesPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShown: false\n    };\n  }\n\n  showOptionPanel(title, message, action) {\n    this.setState({\n      modalShown: true,\n      modalTitle: title,\n      modalMessage: message,\n      confirmAction: action\n    });\n  }\n\n  hideOptionPanel() {\n    this.setState({\n      modalShown: false\n    });\n  }\n\n  onAdd() {\n    if (this.props.onChange) {\n      const bodies = this.createBodies()\n      bodies.push({\n        position: '(0,0,0)'\n      });\n      this.props.onChange(bodies);\n    }\n  }\n\n  onDelete(idx) {\n    this.showOptionPanel(\n      'Remove body #' + (idx + 1),\n      'Body #' + (idx + 1) + ' will be removed from the list.',\n      () => this.deleteBody(idx)\n    );\n  }\n\n  deleteBody(idx) {\n    if (this.props.onChange) {\n      const bodies = this.createBodies();\n      bodies.splice(idx, 1);\n      this.props.onChange(bodies);\n    }\n    this.hideOptionPanel();\n  }\n\n  createBodies() {\n    return _.map(this.props.bodies, b =>\n      (b.rotation) ?\n        {\n          position: b.position.exp,\n          rotation: b.rotation.exp\n        } :\n        {\n          position: b.position.exp\n        }\n    );\n  }\n\n  onChange(idx, body) {\n    if (this.props.onChange) {\n      const bodies = this.createBodies();\n      bodies[idx] = body;\n      this.props.onChange(bodies);\n    }\n  }\n\n  hasError() {\n    return _.flatMap(this.props.bodies, e => {\n      return e.rotation ? _.concat(e.position.errors, e.rotation.errors) : e.position.errors;\n    }).length > 0;\n  }\n\n  render() {\n    const { bodies } = this.props;\n    const { modalShown, modalTitle, modalMessage, confirmAction } = this.state;\n    const rows = _.map(bodies, (body, idx) =>\n      <BodyRow key={idx} id={idx} body={body}\n        onChange={(body) => this.onChange(idx, body)}\n        onDelete={() => this.onDelete(idx)} />\n    );\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            Bodies\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Button size=\"sm\" variant=\"primary\"\n                onClick={() => this.onAdd()}>\n                <FontAwesomeIcon icon={faPlus} />\n              Add new body\n            </Button>\n              <hr></hr>\n              <Table striped size=\"sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Position</th>\n                    <th scope=\"col\">Rotation</th>\n                    <th scope=\"col\"></th>\n                  </tr>\n                  {rows}\n                </thead>\n              </Table>\n              <OptionPanel show={modalShown}\n                title={modalTitle}\n                message={modalMessage}\n                confirmButton=\"Remove\"\n                onConfirm={() => confirmAction()}\n                onCancel={() => this.hideOptionPanel()}\n              />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion >\n    );\n  }\n}\n\nexport { BodiesPanel };\n","import React, { Component } from 'react';\nimport { DefsPanel } from './DefsPanel';\nimport { default as _ } from 'lodash';\nimport { BodiesPanel } from './BodiesPane';\nimport { Form } from 'react-bootstrap';\n\n/*\n * this.props.result = parse state\n */\nclass Editor extends Component {\n\n  createConf() {\n    return {\n      bodies: this.createBodies(),\n      funcs: this.createDefs(this.props.result.funcs),\n      update: this.createDefs(this.props.result.update),\n      vars: this.createDefs(this.props.result.vars),\n    }\n  }\n\n  createBodies() {\n    return _.map(this.props.result.bodies, b =>\n      (b.rotation) ?\n        {\n          position: b.position.exp,\n          rotation: b.rotation.exp\n        } :\n        {\n          position: b.position.exp\n        }\n    );\n  }\n\n  createDefs(defs) {\n    return _.mapValues(defs, 'exp');\n  }\n\n  onChange(panelKey, value) {\n    if (this.props.onChange) {\n      const conf = this.createConf();\n      conf[panelKey] = value;\n      this.props.onChange(conf);\n    }\n  }\n\n  onBodiesChange(bodies) {\n    if (this.props.onChange) {\n      const conf = this.createConf();\n      conf.bodies = bodies;\n      this.props.onChange(conf);\n    }\n  }\n\n  render() {\n    const { result } = this.props;\n    const hasError = _.flatMap(result.funcs, 'errors').length > 0;\n    return (\n      <Form noValidate validated={!hasError} >\n        <BodiesPanel bodies={this.props.result.bodies}\n          onChange={bodies => this.onBodiesChange(bodies)} />\n        <DefsPanel panelKey=\"funcs\" title=\"Macros\" defs={result.funcs}\n          onChange={(panelId, value) => this.onChange(panelId, value)}\n        />\n        <DefsPanel panelKey=\"vars\" title=\"Variables\" defs={this.props.result.vars}\n          onChange={(panelId, value) => this.onChange(panelId, value)}\n        />\n        <DefsPanel panelKey=\"update\" title=\"Update\" defs={this.props.result.update}\n          onChange={(panelId, value) => this.onChange(panelId, value)}\n        />\n      </Form>\n    );\n  }\n}\n\nexport { Editor };\n","import * as BABYLON from 'babylonjs'\n\n/*\n * Returns the Color3 for HSB value (Hue, Saturation, Bright)\n */\nexport function fromHSB(h, s, b) {\n  var hc = null;\n  if (h <= 0) {\n    hc = BABYLON.Color3.Red();\n  } else if (h < 1 / 6) {\n    hc = new BABYLON.Color3(1, h * 6, 0);\n  } else if (h < 2 / 6) {\n    hc = new BABYLON.Color3(2 - 6 * h, 1, 0);\n  } else if (h < 3 / 6) {\n    hc = new BABYLON.Color3(0, 1, h * 6 - 2);\n  } else if (h < 4 / 6) {\n    hc = new BABYLON.Color3(0, 4 - h * 6, 1);\n  } else if (h < 5 / 6) {\n    hc = new BABYLON.Color3(h * 6 - 4, 0, 1);\n  } else if (h < 1) {\n    hc = new BABYLON.Color3(1, 0, 6 - h * 6);\n  } else {\n    hc = BABYLON.Color3.Red();\n  }\n  const sc = BABYLON.Color3.White().scale(1 - s).add(hc.scale(s));\n  return sc.scale(b);\n}\n\n/*\n * Returns the Color3 of heat color scale (Violet to Red)\n */\nexport function fromHeat(h) {\n  return fromHSB((1 - h) * 5 / 6, 1, 1 - (1 - h) * 0.2);\n}\n","import * as BABYLON from 'babylonjs';\nimport { default as _ } from 'lodash';\nimport * as hsb from './hsb-color-1.1.0';\n\nconst Octahedron = 1;\n// const ElongatedSquareDipyramid = 12;\n\nfunction createCamera(scene, options) {\n    var camera = null;\n    switch (options.cameraType) {\n        case 'do':\n            camera = new BABYLON.DeviceOrientationCamera('DevOr_camera', new BABYLON.Vector3(0, 0, 0), scene);\n            camera.position = options.cameraPosition;\n            camera.setTarget(BABYLON.Vector3.Zero());\n            camera.angularSensibility = 10;\n            camera.moveSensibility = 10;\n            break;\n        case 'ac':\n            camera = new BABYLON.AnaglyphArcRotateCamera('aar_cam', -Math.PI / 2, Math.PI / 4, 20, new BABYLON.Vector3.Zero(), 0.033, scene);\n            camera.target = BABYLON.Vector3.Zero();\n            camera.setPosition(options.cameraPosition);\n            return camera;\n        case 'vr':\n            camera = new BABYLON.VRDeviceOrientationArcRotateCamera('Camera', Math.PI / 2, Math.PI / 4, 25, new BABYLON.Vector3(0, 0, 0), scene);\n            camera.target = BABYLON.Vector3.Zero();\n            camera.setPosition(options.cameraPosition);\n            break;\n        default:\n            camera = new BABYLON.ArcRotateCamera('ArcRotateCamera', 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);\n            camera.target = BABYLON.Vector3.Zero();\n            camera.setPosition(options.cameraPosition);\n            break;\n    }\n    camera.minZ = options.cameraMinZ;\n    return camera;\n}\n\nfunction createOcta(scene, name, color) {\n    const shape = BABYLON.MeshBuilder.CreatePolyhedron(\n        'Octa_' + name, {\n            type: Octahedron,\n            sizeX: 0.1,\n            sizeY: 0.2,\n            sizeZ: 0.05,\n        },\n        scene\n    );\n    shape.material = new BABYLON.StandardMaterial('Material_' + name, scene);\n    shape.material.ambientColor = color;\n    shape.material.diffuseColor = color;\n    return shape;\n}\n\nfunction createSphere(scene, name, color) {\n    const sphere = BABYLON.MeshBuilder.CreateIcoSphere(\n        'Sphere_' + name, {\n            flat: 0,\n            radius: 0.1,\n            subdivisions: 4,\n            updatable: false\n        },\n        scene);\n    sphere.material = new BABYLON.StandardMaterial('Material_' + name, scene);\n    sphere.material.ambientColor = color;\n    sphere.material.diffuseColor = color;\n    return sphere;\n}\n\nexport class Leibniz {\n    constructor(props) {\n        this.props = props;\n    }\n\n    init(options) {\n        const _options = _.defaults(options || {}, {\n            cameraType: 'do',\n            cameraPosition: new BABYLON.Vector3(0, 0, -10),\n            cameraMinZ: 0.5,\n            ambientColor: new BABYLON.Color3(0.2, 0.2, 0.2),\n            sunLightDirection: new BABYLON.Vector3(1, 1, -1),\n            sunLightIntensity: 0.7,\n            subSteps: 1\n        });\n\n        this._subSteps = _options.subSteps;\n\n        const camera = createCamera(this.props.scene, _options);\n        camera.attachControl(this.props.canvas, true);\n\n        // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n        const light = new BABYLON.HemisphericLight(\n            'sunLight',\n            _options.sunLightDirection,\n            this.props.scene);\n        light.intensity = _options.sunLightIntensity;\n\n        this.props.scene.ambientColor = _options.ambientColor;\n\n        this._state = {\n            funcs: {},\n            vars: {},\n            update: {},\n            bodies: [],\n            next: () => this._state\n        };\n\n        this.props.scene.onBeforeStepObservable.add((scene) => {\n            const ar = scene.getAnimationRatio() || 1;\n            const dt = ar / 60 / this.subSteps;\n            for (var i = 0; i < this.subSteps; i++) {\n                this.refreshTime(dt);\n            }\n        });\n\n        // Adds callback handler on rendering loop\n        this.props.engine.runRenderLoop(() => {\n            this.refreshScene();\n            this.props.scene.render();\n        });\n    }\n\n    set system(system) {\n\n        // Cleans up scene\n        _.each(this._shapes, shape =>\n            this.props.scene.removeMesh(shape, true)\n        );\n\n        const shapes = _.map(system.bodies, (body, i, ary) => {\n            const name = 'Body' + i;\n            const color = hsb.fromHeat(ary.length > 1 ? i / (ary.length - 1) : 0);\n            const shape = (body.rotation !== undefined)\n                ? createOcta(this.props.scene, name, color)\n                : createSphere(this.props.scene, name, color);\n            this.updateShape(shape, body);\n            return shape;\n        });\n        this._shapes = shapes;\n        this._state = system;\n        //this.props.engine.render();\n        return this;\n    }\n\n    get subSteps() {\n        return this._subSteps;\n    }\n\n    set subSteps(value) {\n        this._subSteps = value;\n    }\n\n\n    refreshTime(dt) {\n        this._state = this._state.next(dt);\n    }\n\n    refreshScene() {\n        _.each(_.zip(this._state.bodies, this._shapes), (ary) =>\n            this.updateShape(ary[1], ary[0])\n        );\n    }\n\n    updateShape(shape, body) {\n        const pos = new BABYLON.Vector3(\n            body.position.values[0][0],\n            body.position.values[1][0],\n            body.position.values[2][0]);\n        shape.position = pos;\n        if (body.rotation) {\n            const rot = new BABYLON.Quaternion.FromArray(body.rotation.values);\n            shape.rotationQuaternion = rot;\n        }\n    }\n\n    refresh() {\n        this.props.engine.resize();\n    }\n}\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { SystemParser } from './leibniz-ast-0.1.1';\n\n/*\n * this.props.result = parse state\n */\nexport class Test extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.createNewState(\n      JSON.stringify(props.initialConf ||\n      {\n        vars: {\n          a: \"0\"\n        },\n        funcs: {\n          b: \"0\"\n        },\n        update: {},\n        bodies: []\n      }, null, '  '));\n  }\n\n  onInput(value) {\n    this.setState(this.createNewState(value));\n  }\n\n  createNewState(conf) {\n    var text;\n    try {\n      const cfg = JSON.parse(conf);\n      const result = new SystemParser(cfg).parse();\n      text = JSON.stringify(result, null, '  ');\n    } catch (e) {\n      console.error(e);\n      text = e.toString();\n    }\n    return {\n      conf: conf,\n      result: text\n    };\n  }\n\n  render() {\n    return (\n      <form>\n        <Form.Group controlId=\"conf\">\n          <Form.Label>Configuration</Form.Label>\n          <Form.Control componentClass=\"textarea\" placeholder=\"Configuration\"\n            rows=\"5\"\n            value={this.state.conf}\n            onInput={(ev) => this.onInput(ev.target.value)}\n            onChange={() => { }} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Result</Form.Label>\n          <Form.Control.Static><pre>{this.state.result}</pre></Form.Control.Static>\n        </Form.Group>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { FormControl, Modal, Button } from 'react-bootstrap';\n\n/**\n * \n */\nexport class ImportFile extends Component {\n\n  onFileChange(file) {\n    if (this.props.onFileRead) {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        this.props.onFileRead(fr.result);\n      };\n      fr.onerror = (event) => {\n        console.error(event);\n        if (this.props.onError) {\n          this.props.onError(event);\n        }\n      };\n      try {\n        fr.readAsText(file);\n      } catch (e) {\n        console.error(e);\n        if (this.props.onError) {\n          this.props.onError(e);\n        }\n      }\n    }\n  }\n\n  onHideModal() {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    return (\n      <Modal bsSize=\"small\" show={this.props.show} onHide={() => this.onHideModal()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Import definitions from file ?</Modal.Title>\n          <Modal.Body>\n            <p>The definitions will be imported from the selected file.</p>\n            <FormControl\n              id=\"formControlsFile\"\n              type=\"file\"\n              label=\"Import file\"\n              help=\"Select file to import.\"\n              onChange={(ev) => this.onFileChange(ev.target.files[0])}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button bsStyle=\"primary\" onClick={() => this.onHideModal()}>Cancel</Button>\n          </Modal.Footer>\n        </Modal.Header>\n      </Modal >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { default as _ } from 'lodash';\nimport { Button, Row, Form, Container } from 'react-bootstrap';\nimport { saveAs } from 'file-saver';\n\nexport class DumpPanel extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      counts: '10',\n      dt: '0.1'\n    };\n  }\n\n  dumpData() {\n    var sys = this.props.result.system;\n    if (sys) {\n      const dt = parseFloat(this.state.dt);\n      const counts = parseInt(this.state.counts);\n      const dumpTable = [];\n      for (var i = 0; i < counts; i++) {\n        dumpTable.push(sys.dumpWithDt(dt));\n        sys = sys.next(dt);\n      }\n      const keys = _(dumpTable[0]).keys().sortBy().value();\n      const header = _.reduce(keys, (a, b) => a + ',' + b) + '\\n\\r';\n      const rows = _(dumpTable).map(row =>\n        _(keys).map(k =>\n          '\"' + row[k].toString() + '\"').reduce((a, b) => a + ',' + b)\n      ).reduce((a, b) => a + '\\n\\r' + b) + '\\n\\r';\n      const blob = new Blob([header + rows], { type: \"text/plain;charset=utf-8\" });\n      saveAs(blob, \"dump.csv\");\n    }\n  }\n\n  setCounts(value) {\n    this.setState({ counts: value });\n  }\n\n  setDt(value) {\n    this.setState({ dt: value });\n  }\n\n  render() {\n    const dumpDisabled = !this.props.result.system;\n    return (\n      <Container>\n        <Row>\n          <Form inline>\n            <Form.Group controlId=\"formInlineName\" size=\"sm\">\n              <Form.Label>Counts</Form.Label>{' '}\n              <Form.Control type=\"text\" placeholder=\"Counts\"\n                onInput={ev => this.setCounts(ev.target.value)}\n                onChange={() => { }}\n                value={this.state.counts} />\n            </Form.Group>{' '}\n            <Form.Group controlId=\"formInlineName\" size=\"sm\">\n              <Form.Label>dt</Form.Label>{' '}\n              <Form.Control type=\"text\" placeholder=\"dt\"\n                onInput={ev => this.setDt(ev.target.value)}\n                onChange={() => { }}\n                value={this.state.dt} />\n            </Form.Group>\n            <Button variant=\"primary\"\n              disabled={dumpDisabled}\n              onClick={() => this.dumpData()} >Download</Button>\n          </Form>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\n/**\n * \n */\nexport const LbNavBar: FunctionComponent<Readonly<{\n  onReset?: () => void;\n  onLoad?: (arg: string) => void;\n  onImport?: () => void;\n  onExport?: () => void;\n}>> = ({ onReset, onLoad, onImport, onExport }) => {\n  return (\n    <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\" >\n      <Navbar.Brand>\n        <a href=\"#brand\">Leibniz</a>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbar-nav\" />\n      <Navbar.Collapse id=\"navbar-nav\">\n        <Nav className=\"mr-auto\" >\n          <NavDropdown id=\"predefined-menu\" title=\"Predefined\">\n            <NavDropdown.Item\n              onSelect={() => { if (onReset) { onReset(); } }}>\n              Reset\n              </NavDropdown.Item>\n            <NavDropdown.Item\n              onSelect={() => { if (onLoad) { onLoad('solaris.json'); } }}>\n              Solaris (Earth - Sun)\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              onSelect={() => { if (onLoad) { onLoad('selene.json'); } }}>\n              Selene (Moon -Earth)\n              </NavDropdown.Item>\n          </NavDropdown>\n          <Nav.Link\n            onClick={() => { if (onImport) { onImport(); } }}>\n            Import\n          </Nav.Link>\n          <Nav.Link\n            onClick={() => { if (onExport) { onExport(); } }}>\n            Export\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { FunctionComponent } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nexport const LbAlert: FunctionComponent<Partial<{\n    isVisible: boolean;\n    onClose: () => void;\n    title: string;\n    message: string;\n}>> = ({ isVisible = false, onClose, title, message }) => {\n\n    return isVisible ? (\n        <Alert variant=\"danger\" dismissible\n            onClose={() => { if (onClose) { onClose(); } }}>\n            <Alert.Heading>{title}</Alert.Heading>\n            <p>{message}</p>\n        </Alert>\n    ) : (\n            <span />\n        );\n}\n","import React, { Component } from 'react';\nimport { Form, FormGroup, FormControl, Tabs, Tab, Container } from 'react-bootstrap';\nimport * as Cookies from 'js-cookie';\nimport { saveAs } from 'file-saver';\nimport './App.css';\nimport { BabylonScene } from './SceneComponent';\nimport { Editor } from './Editor';\nimport { SystemParser } from './leibniz-ast-0.1.1';\nimport { Leibniz } from './leibniz-0.1.3';\nimport { Test } from './Test';\nimport { ImportFile } from './ImportFile';\nimport { OptionPanel } from './OptionPanel';\nimport { DumpPanel } from './DumpPanel';\nimport { ajax } from 'rxjs/ajax';\nimport { tap } from 'rxjs/operators';\nimport { LbNavBar } from './LbNavBar';\nimport { LbAlert } from './LbAlert';\n\nconst conf1 = {\n  bodies: [],\n  funcs: {},\n  vars: {},\n  update: {}\n};\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const cfgCookie = Cookies.get('leibniz');\n    const cfg = cfgCookie ? JSON.parse(cfgCookie) : conf1;\n\n    this.state = {\n      subSteps: \"1\",\n      alertShow: false,\n      modalShown: false,\n      importModalShown: false,\n      initialConf: cfg,\n      result: {\n        parserState: {\n          bodies: [],\n          funcs: {},\n          update: {},\n          vars: {}\n        }\n      }\n    };\n  }\n\n  processConf(conf) {\n    const result = new SystemParser(conf).parse();\n    const state = {\n      conf: conf,\n      result: result\n    };\n    Cookies.set('leibniz', JSON.stringify(conf));\n    if (result.system) {\n      this.leibniz.system = result.system;\n    }\n    return state;\n  }\n\n  onChange(conf) {\n    this.setState(this.processConf(conf));\n  }\n\n  onSceneMount(e) {\n    const leibniz = new Leibniz(e);\n    leibniz.init({\n      cameraType: 'ar',\n      subSteps: this.state.subSteps\n    });\n    this.leibniz = leibniz;\n    this.setState(this.processConf(this.state.initialConf));\n  }\n\n  onReset() {\n    this.showOptionPanel(\n      'Reset definitions ?',\n      'The definitions will be resetted to default value.',\n      'Reset',\n      () => this.reset()\n    );\n  }\n\n  onLoad(name) {\n    this.showOptionPanel(\n      'Load definitions ' + name + ' ?',\n      'The definitions will be load from ' + name + ' .',\n      'Load',\n      () => this.load(name)\n    );\n  }\n\n  showOptionPanel(title, message, confirmButton, confirmAction) {\n    this.setState({\n      optionShow: true,\n      optionTitle: title,\n      optionMessage: message,\n      optionConfirmBtn: confirmButton,\n      optionConfirm: confirmAction\n    });\n  }\n\n  hideOptionPanel() {\n    this.setState({ optionShow: false });\n  }\n\n  showAlert(title, message) {\n    this.setState({\n      alertShow: true,\n      alertTitle: title,\n      alertMessage: message\n    });\n  }\n\n  hideAlert() {\n    this.setState({ alertShow: false });\n  }\n\n  reset() {\n    const state = this.processConf(conf1);\n    this.setState(state);\n    this.hideOptionPanel();\n  }\n\n  load(name) {\n    const url = process.env.REACT_APP_BASENAME + '/' + name;\n    ajax.getJSON(url).pipe(\n      tap(\n        json => this.onLoaded(json),\n        ajax => this.onLoadError(ajax)\n      )\n    ).subscribe(this._subj);\n  }\n\n  onLoaded(json) {\n    console.log(json);\n    const state = this.processConf(json);\n    this.setState(state);\n    this.hideOptionPanel();\n  }\n\n  onLoadError(ajax) {\n    console.error(ajax);\n    const msg = ajax.xhr.status + ' - ' + ajax.xhr.statusText;\n    console.error(msg);\n    this.showAlert('Error', msg);\n    this.hideOptionPanel();\n  }\n\n  test() {\n    return (\n      <Tab eventKey={3} title=\"Test\">\n        <Test initialConf={{\n          vars: {\n            \"a\": \"a0\",\n            \"b\": \"inv(a0)\",\n            \"c\": \"a*b\"\n          }, funcs: {\n            \"a0\": \"T((8,1,6),(3,5,7),(4,9,2))\",\n          }, bodies: [], update: {}\n        }} />\n      </Tab>\n    );\n  }\n\n  showImportPanel() {\n    this.setState({ importModalShown: true });\n  }\n\n  hideImportPanel() {\n    this.setState({ importModalShown: false });\n  }\n\n  importFile(content) {\n    try {\n      const state = this.processConf(JSON.parse(content));\n      this.setState(state);\n      this.hideAlert();\n      this.hideImportPanel();\n    } catch (e) {\n      console.error('Error parsing', content);\n      this.onError(e);\n    }\n  }\n\n  onError(e) {\n    this.showAlert('Error', 'Error parsing file ' + e);\n    this.hideImportPanel();\n  }\n\n  showExportPanel() {\n    this.showOptionPanel(\n      'Export definitions ?',\n      'The definitions will be exported into a local file.',\n      'Export',\n      () => this.exportFile()\n    );\n  }\n\n  setSubSteps(value) {\n    this.setState({ subSteps: value });\n    this.leibniz.subSteps = parseInt(value);\n  }\n\n  exportFile() {\n    const text = JSON.stringify(this.state.conf, null, '  ');\n    const blob = new Blob([text], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, \"test.json\");\n    this.hideOptionPanel();\n  }\n\n  render() {\n    const {\n      alertShow, alertTitle, alertMessage,\n      importModalShown,\n      optionShow, optionTitle, optionMessage, optionConfirmBtn, optionConfirm,\n      result, subSteps\n    } = this.state;\n    return (\n      <Container fluid>\n        <LbNavBar\n          onReset={() => this.onReset()}\n          onLoad={(file) => this.onLoad(file)}\n          onImport={() => this.showImportPanel()}\n          onExport={() => this.showExportPanel()}\n        />\n        <LbAlert\n          show={alertShow}\n          title={alertTitle}\n          message={alertMessage}\n          onClose={() => this.hideAlert()} />\n        <Container>\n          <Tabs id=\"Tab\" defaultActiveKey={1}>\n            <Tab eventKey={1} title=\"Home\">\n              <BabylonScene onSceneMount={ev => this.onSceneMount(ev)}\n                canvasClass=\"graphCanvas\" />\n              <Form inline>\n                <FormGroup controlId=\"formInlineName\" size=\"sm\">\n                  <Form.Label>Sub Steps</Form.Label>{' '}\n                  <FormControl type=\"text\" placeholder=\"Sub Steps\"\n                    onInput={ev => this.setSubSteps(ev.target.value)}\n                    onChange={() => { }}\n                    value={subSteps} />\n                </FormGroup>{' '}\n              </Form>\n            </Tab>\n            <Tab eventKey={2} title=\"Editor\">\n              <Editor result={result.parserState} onChange={conf => this.onChange(conf)} />\n            </Tab>\n            <Tab eventKey={3} title=\"Dump panel\">\n              <DumpPanel result={result} />\n            </Tab>\n          </Tabs>\n        </Container>\n        <ImportFile show={importModalShown}\n          onCancel={() => this.hideImportPanel()}\n          onFileRead={file => this.importFile(file)}\n          onError={e => this.onError(e)} />\n        <OptionPanel show={optionShow}\n          title={optionTitle}\n          message={optionMessage}\n          confirmButton={optionConfirmBtn}\n          onCancel={() => this.hideOptionPanel()}\n          onConfirm={() => optionConfirm()} />\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}